package com.hdu.lease.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class EventContract extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50612172806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063974021521161005b578063974021521461013f578063afa4e8e01461016f578063b9f2d0a21461019f578063c0425592146101bd57610088565b806325bf7b741461008d578063465c4105146100a95780637280bf7d146100d95780639673d6a314610109575b600080fd5b6100a760048036038101906100a2919061168b565b6101db565b005b6100c360048036038101906100be91906116d4565b610358565b6040516100d09190611767565b60405180910390f35b6100f360048036038101906100ee91906117e0565b610435565b6040516101009190611acd565b60405180910390f35b610123600480360381019061011e9190611aef565b610b34565b6040516101369796959493929190611ba0565b60405180910390f35b61015960048036038101906101549190611aef565b610e34565b6040516101669190611767565b60405180910390f35b61018960048036038101906101849190611c32565b610e6a565b6040516101969190611c5f565b60405180910390f35b6101a7610f16565b6040516101b49190611cdf565b60405180910390f35b6101c561110a565b6040516101d29190611db9565b60405180910390f35b600181600001516040516101ef9190611e17565b908152602001604051809103902060009054906101000a900460ff166103555780600082600001516040516102249190611e17565b9081526020016040518091039020600082015181600001908051906020019061024e929190611274565b50602082015181600101556040820151816002019080519060200190610275929190611274565b506060820151816003019080519060200190610292929190611274565b5060808201518160040190805190602001906102af929190611274565b5060a0820151816005015560c08201518160060190805190602001906102d6929190611274565b5090505060018082600001516040516102ef9190611e17565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060028160000151908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610353929190611274565b505b50565b600080839050600083905080518251146103775760009250505061042f565b60005b82518110156104275781818151811061039657610395611e2e565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106103d6576103d5611e2e565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610414576000935050505061042f565b808061041f90611e8c565b91505061037a565b506001925050505b92915050565b6060600060028054905067ffffffffffffffff811115610458576104576113a5565b5b60405190808252806020026020018201604052801561049157816020015b61047e6112fa565b8152602001906001900390816104765790505b5090506000805b600280549050811015610a7c576105756000600283815481106104be576104bd611e2e565b5b906000526020600020016040516104d59190611fca565b908152602001604051809103902060020180546104f190611f04565b80601f016020809104026020016040519081016040528092919081815260200182805461051d90611f04565b801561056a5780601f1061053f5761010080835404028352916020019161056a565b820191906000526020600020905b81548152906001019060200180831161054d57829003601f168201915b505050505088610358565b15610a6957604051806060016040528060006002848154811061059b5761059a611e2e565b5b906000526020600020016040516105b29190611fca565b90815260200160405180910390206040518060e00160405290816000820180546105db90611f04565b80601f016020809104026020016040519081016040528092919081815260200182805461060790611f04565b80156106545780601f1061062957610100808354040283529160200191610654565b820191906000526020600020905b81548152906001019060200180831161063757829003601f168201915b505050505081526020016001820154815260200160028201805461067790611f04565b80601f01602080910402602001604051908101604052809291908181526020018280546106a390611f04565b80156106f05780601f106106c5576101008083540402835291602001916106f0565b820191906000526020600020905b8154815290600101906020018083116106d357829003601f168201915b5050505050815260200160038201805461070990611f04565b80601f016020809104026020016040519081016040528092919081815260200182805461073590611f04565b80156107825780601f1061075757610100808354040283529160200191610782565b820191906000526020600020905b81548152906001019060200180831161076557829003601f168201915b5050505050815260200160048201805461079b90611f04565b80601f01602080910402602001604051908101604052809291908181526020018280546107c790611f04565b80156108145780601f106107e957610100808354040283529160200191610814565b820191906000526020600020905b8154815290600101906020018083116107f757829003601f168201915b505050505081526020016005820154815260200160068201805461083790611f04565b80601f016020809104026020016040519081016040528092919081815260200182805461086390611f04565b80156108b05780601f10610885576101008083540402835291602001916108b0565b820191906000526020600020905b81548152906001019060200180831161089357829003601f168201915b50505050508152505081526020018773ffffffffffffffffffffffffffffffffffffffff1663e6dca1136000600286815481106108f0576108ef611e2e565b5b906000526020600020016040516109079190611fca565b90815260200160405180910390206004016040518263ffffffff1660e01b81526004016109349190612061565b600060405180830381865afa158015610951573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061097a91906120f3565b81526020018673ffffffffffffffffffffffffffffffffffffffff1663610ed5db6000600286815481106109b1576109b0611e2e565b5b906000526020600020016040516109c89190611fca565b90815260200160405180910390206003016040518263ffffffff1660e01b81526004016109f59190612061565b600060405180830381865afa158015610a12573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a3b91906120f3565b815250838380610a4a90611e8c565b945081518110610a5d57610a5c611e2e565b5b60200260200101819052505b8080610a7490611e8c565b915050610498565b508067ffffffffffffffff811115610a9757610a966113a5565b5b604051908082528060200260200182016040528015610ad057816020015b610abd6112fa565b815260200190600190039081610ab55790505b50925060005b81811015610b2a57828181518110610af157610af0611e2e565b5b6020026020010151848281518110610b0c57610b0b611e2e565b5b60200260200101819052508080610b2290611e8c565b915050610ad6565b5050509392505050565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054610b6d90611f04565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9990611f04565b8015610be65780601f10610bbb57610100808354040283529160200191610be6565b820191906000526020600020905b815481529060010190602001808311610bc957829003601f168201915b505050505090806001015490806002018054610c0190611f04565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2d90611f04565b8015610c7a5780601f10610c4f57610100808354040283529160200191610c7a565b820191906000526020600020905b815481529060010190602001808311610c5d57829003601f168201915b505050505090806003018054610c8f90611f04565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbb90611f04565b8015610d085780601f10610cdd57610100808354040283529160200191610d08565b820191906000526020600020905b815481529060010190602001808311610ceb57829003601f168201915b505050505090806004018054610d1d90611f04565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4990611f04565b8015610d965780601f10610d6b57610100808354040283529160200191610d96565b820191906000526020600020905b815481529060010190602001808311610d7957829003601f168201915b505050505090806005015490806006018054610db190611f04565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddd90611f04565b8015610e2a5780601f10610dff57610100808354040283529160200191610e2a565b820191906000526020600020905b815481529060010190602001808311610e0d57829003601f168201915b5050505050905087565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60028181548110610e7a57600080fd5b906000526020600020016000915090508054610e9590611f04565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec190611f04565b8015610f0e5780601f10610ee357610100808354040283529160200191610f0e565b820191906000526020600020905b815481529060010190602001808311610ef157829003601f168201915b505050505081565b610f1e6112fa565b60006040518060e001604052806040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525081526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81526020016040518060400160405280600d81526020017f617373657444657461696c49640000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f706c61636549640000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600f81526020017f6f70657261746f724163636f756e7400000000000000000000000000000000008152508152602001600081526020016040518060400160405280600781526020017f636f6e74656e7400000000000000000000000000000000000000000000000000815250815250905060405180606001604052808281526020016040518060400160405280600881526020017f757365724e616d6500000000000000000000000000000000000000000000000081525081526020016040518060400160405280600981526020017f706c6163654e616d65000000000000000000000000000000000000000000000081525081525091505090565b611112611321565b6040518060e001604052806040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525081526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81526020016040518060400160405280600d81526020017f617373657444657461696c49640000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f706c61636549640000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600f81526020017f6f70657261746f724163636f756e7400000000000000000000000000000000008152508152602001600081526020016040518060400160405280600781526020017f636f6e74656e7400000000000000000000000000000000000000000000000000815250815250905090565b82805461128090611f04565b90600052602060002090601f0160209004810192826112a257600085556112e9565b82601f106112bb57805160ff19168380011785556112e9565b828001600101855582156112e9579182015b828111156112e85782518255916020019190600101906112cd565b5b5090506112f6919061135e565b5090565b604051806060016040528061130d611321565b815260200160608152602001606081525090565b6040518060e00160405280606081526020016000815260200160608152602001606081526020016060815260200160008152602001606081525090565b5b8082111561137757600081600090555060010161135f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113dd82611394565b810181811067ffffffffffffffff821117156113fc576113fb6113a5565b5b80604052505050565b600061140f61137b565b905061141b82826113d4565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff82111561144a576114496113a5565b5b61145382611394565b9050602081019050919050565b82818337600083830152505050565b600061148261147d8461142f565b611405565b90508281526020810184848401111561149e5761149d61142a565b5b6114a9848285611460565b509392505050565b600082601f8301126114c6576114c5611425565b5b81356114d684826020860161146f565b91505092915050565b6000819050919050565b6114f2816114df565b81146114fd57600080fd5b50565b60008135905061150f816114e9565b92915050565b6000819050919050565b61152881611515565b811461153357600080fd5b50565b6000813590506115458161151f565b92915050565b600060e082840312156115615761156061138f565b5b61156b60e0611405565b9050600082013567ffffffffffffffff81111561158b5761158a611420565b5b611597848285016114b1565b60008301525060206115ab84828501611500565b602083015250604082013567ffffffffffffffff8111156115cf576115ce611420565b5b6115db848285016114b1565b604083015250606082013567ffffffffffffffff8111156115ff576115fe611420565b5b61160b848285016114b1565b606083015250608082013567ffffffffffffffff81111561162f5761162e611420565b5b61163b848285016114b1565b60808301525060a061164f84828501611536565b60a08301525060c082013567ffffffffffffffff81111561167357611672611420565b5b61167f848285016114b1565b60c08301525092915050565b6000602082840312156116a1576116a0611385565b5b600082013567ffffffffffffffff8111156116bf576116be61138a565b5b6116cb8482850161154b565b91505092915050565b600080604083850312156116eb576116ea611385565b5b600083013567ffffffffffffffff8111156117095761170861138a565b5b611715858286016114b1565b925050602083013567ffffffffffffffff8111156117365761173561138a565b5b611742858286016114b1565b9150509250929050565b60008115159050919050565b6117618161174c565b82525050565b600060208201905061177c6000830184611758565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117ad82611782565b9050919050565b6117bd816117a2565b81146117c857600080fd5b50565b6000813590506117da816117b4565b92915050565b6000806000606084860312156117f9576117f8611385565b5b600084013567ffffffffffffffff8111156118175761181661138a565b5b611823868287016114b1565b9350506020611834868287016117cb565b9250506040611845868287016117cb565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118b557808201518184015260208101905061189a565b838111156118c4576000848401525b50505050565b60006118d58261187b565b6118df8185611886565b93506118ef818560208601611897565b6118f881611394565b840191505092915050565b61190c816114df565b82525050565b61191b81611515565b82525050565b600060e083016000830151848203600086015261193e82826118ca565b91505060208301516119536020860182611903565b506040830151848203604086015261196b82826118ca565b9150506060830151848203606086015261198582826118ca565b9150506080830151848203608086015261199f82826118ca565b91505060a08301516119b460a0860182611912565b5060c083015184820360c08601526119cc82826118ca565b9150508091505092915050565b600060608301600083015184820360008601526119f68282611921565b91505060208301518482036020860152611a1082826118ca565b91505060408301518482036040860152611a2a82826118ca565b9150508091505092915050565b6000611a4383836119d9565b905092915050565b6000602082019050919050565b6000611a638261184f565b611a6d818561185a565b935083602082028501611a7f8561186b565b8060005b85811015611abb5784840389528151611a9c8582611a37565b9450611aa783611a4b565b925060208a01995050600181019050611a83565b50829750879550505050505092915050565b60006020820190508181036000830152611ae78184611a58565b905092915050565b600060208284031215611b0557611b04611385565b5b600082013567ffffffffffffffff811115611b2357611b2261138a565b5b611b2f848285016114b1565b91505092915050565b600082825260208201905092915050565b6000611b548261187b565b611b5e8185611b38565b9350611b6e818560208601611897565b611b7781611394565b840191505092915050565b611b8b816114df565b82525050565b611b9a81611515565b82525050565b600060e0820190508181036000830152611bba818a611b49565b9050611bc96020830189611b82565b8181036040830152611bdb8188611b49565b90508181036060830152611bef8187611b49565b90508181036080830152611c038186611b49565b9050611c1260a0830185611b91565b81810360c0830152611c248184611b49565b905098975050505050505050565b600060208284031215611c4857611c47611385565b5b6000611c5684828501611536565b91505092915050565b60006020820190508181036000830152611c798184611b49565b905092915050565b60006060830160008301518482036000860152611c9e8282611921565b91505060208301518482036020860152611cb882826118ca565b91505060408301518482036040860152611cd282826118ca565b9150508091505092915050565b60006020820190508181036000830152611cf98184611c81565b905092915050565b600060e0830160008301518482036000860152611d1e82826118ca565b9150506020830151611d336020860182611903565b5060408301518482036040860152611d4b82826118ca565b91505060608301518482036060860152611d6582826118ca565b91505060808301518482036080860152611d7f82826118ca565b91505060a0830151611d9460a0860182611912565b5060c083015184820360c0860152611dac82826118ca565b9150508091505092915050565b60006020820190508181036000830152611dd38184611d01565b905092915050565b600081905092915050565b6000611df18261187b565b611dfb8185611ddb565b9350611e0b818560208601611897565b80840191505092915050565b6000611e238284611de6565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e9782611515565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611eca57611ec9611e5d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f1c57607f821691505b60208210811415611f3057611f2f611ed5565b5b50919050565b60008190508160005260206000209050919050565b60008154611f5881611f04565b611f628186611ddb565b94506001821660008114611f7d5760018114611f8e57611fc1565b60ff19831686528186019350611fc1565b611f9785611f36565b60005b83811015611fb957815481890152600182019150602081019050611f9a565b838801955050505b50505092915050565b6000611fd68284611f4b565b915081905092915050565b60008154611fee81611f04565b611ff88186611b38565b94506001821660008114612013576001811461202557612058565b60ff1983168652602086019350612058565b61202e85611f36565b60005b8381101561205057815481890152600182019150602081019050612031565b808801955050505b50505092915050565b6000602082019050818103600083015261207b8184611fe1565b905092915050565b60006120966120918461142f565b611405565b9050828152602081018484840111156120b2576120b161142a565b5b6120bd848285611897565b509392505050565b600082601f8301126120da576120d9611425565b5b81516120ea848260208601612083565b91505092915050565b60006020828403121561210957612108611385565b5b600082015167ffffffffffffffff8111156121275761212661138a565b5b612133848285016120c5565b9150509291505056fea264697066735822122082b49a226e7eef2a450f96dc36fea2cb5cf82f7bd5790b88012c7aca305543d764736f6c634300080a0033";

    public static final String FUNC_EVENTINSERTED = "eventInserted";

    public static final String FUNC_EVENTKEY = "eventKey";

    public static final String FUNC_EVENTS = "events";

    public static final String FUNC_GETEVENTDTO = "getEventDTO";

    public static final String FUNC_GETEVENTTEST = "getEventTest"   ;

    public static final String FUNC_GETLISTBYDETAILID = "getListByDetailId";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_ISEQUAL = "isEqual";

    @Deprecated
    protected EventContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected EventContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected EventContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected EventContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Boolean> eventInserted(String param0) {
        final Function function = new Function(FUNC_EVENTINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> eventKey(BigInteger param0) {
        final Function function = new Function(FUNC_EVENTKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple7<String, BigInteger, String, String, String, BigInteger, String>> events(String param0) {
        final Function function = new Function(FUNC_EVENTS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, BigInteger, String, String, String, BigInteger, String>>(function,
                new Callable<Tuple7<String, BigInteger, String, String, String, BigInteger, String>>() {
                    @Override
                    public Tuple7<String, BigInteger, String, String, String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, BigInteger, String, String, String, BigInteger, String>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (BigInteger) results.get(5).getValue(),
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<EventDTO> getEventDTO() {
        final Function function = new Function(FUNC_GETEVENTDTO,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<EventDTO>() {}));
        return executeRemoteCallSingleValueReturn(function, EventDTO.class);
    }

    public RemoteFunctionCall<Event> getEventTest() {
        final Function function = new Function(FUNC_GETEVENTTEST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Event>() {}));
        return executeRemoteCallSingleValueReturn(function, Event.class);
    }

    public RemoteFunctionCall<List> getListByDetailId(String _detailId, String _userContract, String _placeContract) {
        final Function function = new Function(FUNC_GETLISTBYDETAILID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_detailId),
                        new org.web3j.abi.datatypes.Address(160, _userContract),
                        new org.web3j.abi.datatypes.Address(160, _placeContract)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<EventDTO>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> insert(Event _event) {
        final Function function = new Function(
                FUNC_INSERT,
                Arrays.<Type>asList(_event),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final Function function = new Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static EventContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new EventContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static EventContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new EventContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static EventContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new EventContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static EventContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new EventContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<EventContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EventContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EventContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EventContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<EventContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EventContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EventContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EventContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Getter
    @Setter
    @ToString
    public static class Event extends DynamicStruct {
        public String id;

        public BigInteger eventType;

        public String assetDetailId;

        public String placeId;

        public String operatorAccount;

        public BigInteger createTime;

        public String content;

        public Event(String id, BigInteger eventType, String assetDetailId, String placeId, String operatorAccount, BigInteger createTime, String content) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.generated.Int256(eventType),new org.web3j.abi.datatypes.Utf8String(assetDetailId),new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(operatorAccount),new org.web3j.abi.datatypes.generated.Uint256(createTime),new org.web3j.abi.datatypes.Utf8String(content));
            this.id = id;
            this.eventType = eventType;
            this.assetDetailId = assetDetailId;
            this.placeId = placeId;
            this.operatorAccount = operatorAccount;
            this.createTime = createTime;
            this.content = content;
        }

        public Event(Utf8String id, Int256 eventType, Utf8String assetDetailId, Utf8String placeId, Utf8String operatorAccount, Uint256 createTime, Utf8String content) {
            super(id,eventType,assetDetailId,placeId,operatorAccount,createTime,content);
            this.id = id.getValue();
            this.eventType = eventType.getValue();
            this.assetDetailId = assetDetailId.getValue();
            this.placeId = placeId.getValue();
            this.operatorAccount = operatorAccount.getValue();
            this.createTime = createTime.getValue();
            this.content = content.getValue();
        }
    }

    @Getter
    @Setter
    @ToString
    public static class EventDTO extends DynamicStruct {
        public Event _event;

        public String userName;

        public String placeName;

        public EventDTO(Event _event, String userName, String placeName) {
            super(_event,new org.web3j.abi.datatypes.Utf8String(userName),new org.web3j.abi.datatypes.Utf8String(placeName));
            this._event = _event;
            this.userName = userName;
            this.placeName = placeName;
        }

        public EventDTO(Event _event, Utf8String userName, Utf8String placeName) {
            super(_event,userName,placeName);
            this._event = _event;
            this.userName = userName.getValue();
            this.placeName = placeName.getValue();
        }
    }
}
