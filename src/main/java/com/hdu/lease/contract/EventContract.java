package com.hdu.lease.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class EventContract extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_EVENTINSERTED = "eventInserted";

    public static final String FUNC_EVENTKEY = "eventKey";

    public static final String FUNC_EVENTS = "events";

    public static final String FUNC_GETEVENTDTO = "getEventDTO";

    public static final String FUNC_GETEVENTTEST = "getEventTest";

    public static final String FUNC_GETLISTBYDETAILID = "getListByDetailId";

    public static final String FUNC_GETLISTBYDETAILID2 = "getListByDetailId2";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_ISEQUAL = "isEqual";

    @Deprecated
    protected EventContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected EventContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected EventContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected EventContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Boolean> eventInserted(String param0) {
        final Function function = new Function(FUNC_EVENTINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> eventKey(BigInteger param0) {
        final Function function = new Function(FUNC_EVENTKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple7<String, BigInteger, String, String, String, BigInteger, String>> events(String param0) {
        final Function function = new Function(FUNC_EVENTS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple7<String, BigInteger, String, String, String, BigInteger, String>>(function,
                new Callable<Tuple7<String, BigInteger, String, String, String, BigInteger, String>>() {
                    @Override
                    public Tuple7<String, BigInteger, String, String, String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, BigInteger, String, String, String, BigInteger, String>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (BigInteger) results.get(5).getValue(),
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<EventDTO> getEventDTO() {
        final Function function = new Function(FUNC_GETEVENTDTO,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<EventDTO>() {}));
        return executeRemoteCallSingleValueReturn(function, EventDTO.class);
    }

    public RemoteFunctionCall<Event> getEventTest() {
        final Function function = new Function(FUNC_GETEVENTTEST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Event>() {}));
        return executeRemoteCallSingleValueReturn(function, Event.class);
    }

    public RemoteFunctionCall<List> getListByDetailId(String _detailId, String _userContract, String _placeContract) {
        final Function function = new Function(FUNC_GETLISTBYDETAILID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_detailId),
                        new org.web3j.abi.datatypes.Address(160, _userContract),
                        new org.web3j.abi.datatypes.Address(160, _placeContract)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<EventDTO>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getListByDetailId2(String _detailId) {
        final Function function = new Function(FUNC_GETLISTBYDETAILID2,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_detailId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Event>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> insert(Event _event) {
        final Function function = new Function(
                FUNC_INSERT,
                Arrays.<Type>asList(_event),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final Function function = new Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static EventContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new EventContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static EventContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new EventContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static EventContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new EventContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static EventContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new EventContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<EventContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EventContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EventContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EventContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<EventContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EventContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EventContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EventContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Getter
    @Setter
    @ToString
    public static class Event extends DynamicStruct {
        public String id;

        public BigInteger eventType;

        public String assetDetailId;

        public String placeId;

        public String operatorAccount;

        public BigInteger createTime;

        public String content;

        public Event(String id, BigInteger eventType, String assetDetailId, String placeId, String operatorAccount, BigInteger createTime, String content) {
            super(new org.web3j.abi.datatypes.Utf8String(id),new org.web3j.abi.datatypes.generated.Int256(eventType),new org.web3j.abi.datatypes.Utf8String(assetDetailId),new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(operatorAccount),new org.web3j.abi.datatypes.generated.Uint256(createTime),new org.web3j.abi.datatypes.Utf8String(content));
            this.id = id;
            this.eventType = eventType;
            this.assetDetailId = assetDetailId;
            this.placeId = placeId;
            this.operatorAccount = operatorAccount;
            this.createTime = createTime;
            this.content = content;
        }

        public Event(Utf8String id, Int256 eventType, Utf8String assetDetailId, Utf8String placeId, Utf8String operatorAccount, Uint256 createTime, Utf8String content) {
            super(id,eventType,assetDetailId,placeId,operatorAccount,createTime,content);
            this.id = id.getValue();
            this.eventType = eventType.getValue();
            this.assetDetailId = assetDetailId.getValue();
            this.placeId = placeId.getValue();
            this.operatorAccount = operatorAccount.getValue();
            this.createTime = createTime.getValue();
            this.content = content.getValue();
        }
    }

    @Getter
    @Setter
    @ToString
    public static class EventDTO extends DynamicStruct {
        public Event _event;

        public String userName;

        public String placeName;

        public EventDTO(Event _event, String userName, String placeName) {
            super(_event,new org.web3j.abi.datatypes.Utf8String(userName),new org.web3j.abi.datatypes.Utf8String(placeName));
            this._event = _event;
            this.userName = userName;
            this.placeName = placeName;
        }

        public EventDTO(Event _event, Utf8String userName, Utf8String placeName) {
            super(_event,userName,placeName);
            this._event = _event;
            this.userName = userName.getValue();
            this.placeName = placeName.getValue();
        }
    }
}
