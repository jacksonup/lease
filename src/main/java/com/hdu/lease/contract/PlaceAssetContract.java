package com.hdu.lease.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class PlaceAssetContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b50611e9f806100296000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637ce7f1b7116100665780637ce7f1b71461018557806382d7a6e3146101b5578063c65612da146101e5578063e31bcfca14610203578063fd346af6146102335761009e565b806309bfe26d146100a35780631f7b6d32146100d3578063465c4105146100f15780634a69a74714610121578063637bf51a14610155575b600080fd5b6100bd60048036038101906100b8919061124b565b61024f565b6040516100ca9190611311565b60405180910390f35b6100db6102fb565b6040516100e89190611342565b60405180910390f35b61010b60048036038101906101069190611492565b610301565b6040516101189190611525565b60405180910390f35b61013b60048036038101906101369190611540565b6103de565b60405161014c959493929190611589565b60405180910390f35b61016f600480360381019061016a9190611540565b6105c2565b60405161017c9190611525565b60405180910390f35b61019f600480360381019061019a9190611540565b6105f8565b6040516101ac9190611525565b60405180910390f35b6101cf60048036038101906101ca919061164f565b610707565b6040516101dc91906117b7565b60405180910390f35b6101ed6109f0565b6040516101fa919061186c565b60405180910390f35b61021d60048036038101906102189190611540565b610bee565b60405161022a91906117b7565b60405180910390f35b61024d60048036038101906102489190611a5e565b610f32565b005b6002818154811061025f57600080fd5b90600052602060002001600091509050805461027a90611ad6565b80601f01602080910402602001604051908101604052809291908181526020018280546102a690611ad6565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b505050505081565b60035481565b60008083905060008390508051825114610320576000925050506103d8565b60005b82518110156103d05781818151811061033f5761033e611b08565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683828151811061037f5761037e611b08565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103bd57600093505050506103d8565b80806103c890611b66565b915050610323565b506001925050505b92915050565b60008180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461041790611ad6565b80601f016020809104026020016040519081016040528092919081815260200182805461044390611ad6565b80156104905780601f1061046557610100808354040283529160200191610490565b820191906000526020600020905b81548152906001019060200180831161047357829003601f168201915b5050505050908060010180546104a590611ad6565b80601f01602080910402602001604051908101604052809291908181526020018280546104d190611ad6565b801561051e5780601f106104f35761010080835404028352916020019161051e565b820191906000526020600020905b81548152906001019060200180831161050157829003601f168201915b50505050509080600201805461053390611ad6565b80601f016020809104026020016040519081016040528092919081815260200182805461055f90611ad6565b80156105ac5780601f10610581576101008083540402835291602001916105ac565b820191906000526020600020905b81548152906001019060200180831161058f57829003601f168201915b5050505050908060030154908060040154905085565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6000806000905060005b6003548110156106fd576106dc60006002838154811061062557610624611b08565b5b9060005260206000200160405161063c9190611c4e565b9081526020016040518091039020600101805461065890611ad6565b80601f016020809104026020016040519081016040528092919081815260200182805461068490611ad6565b80156106d15780601f106106a6576101008083540402835291602001916106d1565b820191906000526020600020905b8154815290600101906020018083116106b457829003601f168201915b505050505085610301565b156106ea57600191506106fd565b80806106f590611b66565b915050610602565b5080915050919050565b60606000603267ffffffffffffffff81111561072657610725611367565b5b60405190808252806020026020018201604052801561075957816020015b60608152602001906001900390816107445790505b5090506000805b6003548110156109395761083a60006002838154811061078357610782611b08565b5b9060005260206000200160405161079a9190611c4e565b908152602001604051809103902060020180546107b690611ad6565b80601f01602080910402602001604051908101604052809291908181526020018280546107e290611ad6565b801561082f5780601f106108045761010080835404028352916020019161082f565b820191906000526020600020905b81548152906001019060200180831161081257829003601f168201915b505050505086610301565b15610926578573ffffffffffffffffffffffffffffffffffffffff1663610ed5db60006002848154811061087157610870611b08565b5b906000526020600020016040516108889190611c4e565b90815260200160405180910390206001016040518263ffffffff1660e01b81526004016108b59190611ce5565b600060405180830381865afa1580156108d2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108fb9190611d77565b83838061090790611b66565b94508151811061091a57610919611b08565b5b60200260200101819052505b808061093190611b66565b915050610760565b5060008167ffffffffffffffff81111561095657610955611367565b5b60405190808252806020026020018201604052801561098957816020015b60608152602001906001900390816109745790505b50905060005b828110156109e3578381815181106109aa576109a9611b08565b5b60200260200101518282815181106109c5576109c4611b08565b5b602002602001018190525080806109db90611b66565b91505061098f565b5080935050505092915050565b6109f861112f565b6000604051610a0690611e0c565b90815260200160405180910390206040518060a0016040529081600082018054610a2f90611ad6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b90611ad6565b8015610aa85780601f10610a7d57610100808354040283529160200191610aa8565b820191906000526020600020905b815481529060010190602001808311610a8b57829003601f168201915b50505050508152602001600182018054610ac190611ad6565b80601f0160208091040260200160405190810160405280929190818152602001828054610aed90611ad6565b8015610b3a5780601f10610b0f57610100808354040283529160200191610b3a565b820191906000526020600020905b815481529060010190602001808311610b1d57829003601f168201915b50505050508152602001600282018054610b5390611ad6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7f90611ad6565b8015610bcc5780601f10610ba157610100808354040283529160200191610bcc565b820191906000526020600020905b815481529060010190602001808311610baf57829003601f168201915b5050505050815260200160038201548152602001600482015481525050905090565b60606000603267ffffffffffffffff811115610c0d57610c0c611367565b5b604051908082528060200260200182016040528015610c4057816020015b6060815260200190600190039081610c2b5790505b5090506000805b600354811015610e7c57600160028281548110610c6757610c66611b08565b5b90600052602060002001604051610c7e9190611c4e565b908152602001604051809103902060009054906101000a900460ff168015610d725750610d71600060028381548110610cba57610cb9611b08565b5b90600052602060002001604051610cd19190611c4e565b90815260200160405180910390206001018054610ced90611ad6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1990611ad6565b8015610d665780601f10610d3b57610100808354040283529160200191610d66565b820191906000526020600020905b815481529060010190602001808311610d4957829003601f168201915b505050505086610301565b5b15610e6957600060028281548110610d8d57610d8c611b08565b5b90600052602060002001604051610da49190611c4e565b90815260200160405180910390206002018054610dc090611ad6565b80601f0160208091040260200160405190810160405280929190818152602001828054610dec90611ad6565b8015610e395780601f10610e0e57610100808354040283529160200191610e39565b820191906000526020600020905b815481529060010190602001808311610e1c57829003601f168201915b5050505050838380610e4a90611b66565b945081518110610e5d57610e5c611b08565b5b60200260200101819052505b8080610e7490611b66565b915050610c47565b5060008167ffffffffffffffff811115610e9957610e98611367565b5b604051908082528060200260200182016040528015610ecc57816020015b6060815260200190600190039081610eb75790505b50905060005b82811015610f2657838181518110610eed57610eec611b08565b5b6020026020010151828281518110610f0857610f07611b08565b5b60200260200101819052508080610f1e90611b66565b915050610ed2565b50809350505050919050565b60005b815181101561112b576001828281518110610f5357610f52611b08565b5b602002602001015160000151604051610f6c9190611e52565b908152602001604051809103902060009054906101000a900460ff1661111857818181518110610f9f57610f9e611b08565b5b60200260200101516000838381518110610fbc57610fbb611b08565b5b602002602001015160000151604051610fd59190611e52565b90815260200160405180910390206000820151816000019080519060200190610fff92919061115e565b50602082015181600101908051906020019061101c92919061115e565b50604082015181600201908051906020019061103992919061115e565b50606082015181600301556080820151816004015590505060018083838151811061106757611066611b08565b5b6020026020010151600001516040516110809190611e52565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060028282815181106110ba576110b9611b08565b5b6020026020010151600001519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906110fe92919061115e565b506003600081548092919061111290611b66565b91905055505b808061112390611b66565b915050610f35565b5050565b6040518060a0016040528060608152602001606081526020016060815260200160008152602001600081525090565b82805461116a90611ad6565b90600052602060002090601f01602090048101928261118c57600085556111d3565b82601f106111a557805160ff19168380011785556111d3565b828001600101855582156111d3579182015b828111156111d25782518255916020019190600101906111b7565b5b5090506111e091906111e4565b5090565b5b808211156111fd5760008160009055506001016111e5565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61122881611215565b811461123357600080fd5b50565b6000813590506112458161121f565b92915050565b6000602082840312156112615761126061120b565b5b600061126f84828501611236565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112b2578082015181840152602081019050611297565b838111156112c1576000848401525b50505050565b6000601f19601f8301169050919050565b60006112e382611278565b6112ed8185611283565b93506112fd818560208601611294565b611306816112c7565b840191505092915050565b6000602082019050818103600083015261132b81846112d8565b905092915050565b61133c81611215565b82525050565b60006020820190506113576000830184611333565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61139f826112c7565b810181811067ffffffffffffffff821117156113be576113bd611367565b5b80604052505050565b60006113d1611201565b90506113dd8282611396565b919050565b600067ffffffffffffffff8211156113fd576113fc611367565b5b611406826112c7565b9050602081019050919050565b82818337600083830152505050565b6000611435611430846113e2565b6113c7565b90508281526020810184848401111561145157611450611362565b5b61145c848285611413565b509392505050565b600082601f8301126114795761147861135d565b5b8135611489848260208601611422565b91505092915050565b600080604083850312156114a9576114a861120b565b5b600083013567ffffffffffffffff8111156114c7576114c6611210565b5b6114d385828601611464565b925050602083013567ffffffffffffffff8111156114f4576114f3611210565b5b61150085828601611464565b9150509250929050565b60008115159050919050565b61151f8161150a565b82525050565b600060208201905061153a6000830184611516565b92915050565b6000602082840312156115565761155561120b565b5b600082013567ffffffffffffffff81111561157457611573611210565b5b61158084828501611464565b91505092915050565b600060a08201905081810360008301526115a381886112d8565b905081810360208301526115b781876112d8565b905081810360408301526115cb81866112d8565b90506115da6060830185611333565b6115e76080830184611333565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061161c826115f1565b9050919050565b61162c81611611565b811461163757600080fd5b50565b60008135905061164981611623565b92915050565b600080604083850312156116665761166561120b565b5b60006116748582860161163a565b925050602083013567ffffffffffffffff81111561169557611694611210565b5b6116a185828601611464565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006116f382611278565b6116fd81856116d7565b935061170d818560208601611294565b611716816112c7565b840191505092915050565b600061172d83836116e8565b905092915050565b6000602082019050919050565b600061174d826116ab565b61175781856116b6565b935083602082028501611769856116c7565b8060005b858110156117a557848403895281516117868582611721565b945061179183611735565b925060208a0199505060018101905061176d565b50829750879550505050505092915050565b600060208201905081810360008301526117d18184611742565b905092915050565b6117e281611215565b82525050565b600060a083016000830151848203600086015261180582826116e8565b9150506020830151848203602086015261181f82826116e8565b9150506040830151848203604086015261183982826116e8565b915050606083015161184e60608601826117d9565b50608083015161186160808601826117d9565b508091505092915050565b6000602082019050818103600083015261188681846117e8565b905092915050565b600067ffffffffffffffff8211156118a9576118a8611367565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600060a082840312156118df576118de6118bf565b5b6118e960a06113c7565b9050600082013567ffffffffffffffff811115611909576119086118c4565b5b61191584828501611464565b600083015250602082013567ffffffffffffffff811115611939576119386118c4565b5b61194584828501611464565b602083015250604082013567ffffffffffffffff811115611969576119686118c4565b5b61197584828501611464565b604083015250606061198984828501611236565b606083015250608061199d84828501611236565b60808301525092915050565b60006119bc6119b78461188e565b6113c7565b905080838252602082019050602084028301858111156119df576119de6118ba565b5b835b81811015611a2657803567ffffffffffffffff811115611a0457611a0361135d565b5b808601611a1189826118c9565b855260208501945050506020810190506119e1565b5050509392505050565b600082601f830112611a4557611a4461135d565b5b8135611a558482602086016119a9565b91505092915050565b600060208284031215611a7457611a7361120b565b5b600082013567ffffffffffffffff811115611a9257611a91611210565b5b611a9e84828501611a30565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611aee57607f821691505b60208210811415611b0257611b01611aa7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b7182611215565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ba457611ba3611b37565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611bdc81611ad6565b611be68186611baf565b94506001821660008114611c015760018114611c1257611c45565b60ff19831686528186019350611c45565b611c1b85611bba565b60005b83811015611c3d57815481890152600182019150602081019050611c1e565b838801955050505b50505092915050565b6000611c5a8284611bcf565b915081905092915050565b60008154611c7281611ad6565b611c7c8186611283565b94506001821660008114611c975760018114611ca957611cdc565b60ff1983168652602086019350611cdc565b611cb285611bba565b60005b83811015611cd457815481890152600182019150602081019050611cb5565b808801955050505b50505092915050565b60006020820190508181036000830152611cff8184611c65565b905092915050565b6000611d1a611d15846113e2565b6113c7565b905082815260208101848484011115611d3657611d35611362565b5b611d41848285611294565b509392505050565b600082601f830112611d5e57611d5d61135d565b5b8151611d6e848260208601611d07565b91505092915050565b600060208284031215611d8d57611d8c61120b565b5b600082015167ffffffffffffffff811115611dab57611daa611210565b5b611db784828501611d49565b91505092915050565b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b6000611df6600183611baf565b9150611e0182611dc0565b600182019050919050565b6000611e1782611de9565b9150819050919050565b6000611e2c82611278565b611e368185611baf565b9350611e46818560208601611294565b80840191505092915050565b6000611e5e8284611e21565b91508190509291505056fea26469706673582212204bf8eee27315d9cce0048a8341afc46861137ad46ddf854cdda2d9317188834d64736f6c634300080a0033";

    public static final String FUNC_BINDASSET = "bindAsset";

    public static final String FUNC_GETASSETIDLISTBYPLACEID = "getAssetIdListByPlaceId";

    public static final String FUNC_GETPLACEASSET = "getPlaceAsset";

    public static final String FUNC_GETPLACELIST = "getPlaceList";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_ISPLACEBINDASSET = "isPlaceBindAsset";

    public static final String FUNC_LENGTH = "length";

    public static final String FUNC_PLACEASSETINSERTED = "placeAssetInserted";

    public static final String FUNC_PLACEASSETKEY = "placeAssetKey";

    public static final String FUNC_PLACEASSETS = "placeAssets";

    @Deprecated
    protected PlaceAssetContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PlaceAssetContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PlaceAssetContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PlaceAssetContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> bindAsset(List<PlaceAsset> _placeAssets) {
        final Function function = new Function(
                FUNC_BINDASSET,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<PlaceAsset>(PlaceAsset.class, _placeAssets)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAssetIdListByPlaceId(String _placeId) {
        final Function function = new Function(FUNC_GETASSETIDLISTBYPLACEID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<PlaceAsset> getPlaceAsset() {
        final Function function = new Function(FUNC_GETPLACEASSET,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<PlaceAsset>() {}));
        return executeRemoteCallSingleValueReturn(function, PlaceAsset.class);
    }

    public RemoteFunctionCall<List> getPlaceList(String _placeContract, String _assetId) {
        final Function function = new Function(FUNC_GETPLACELIST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _placeContract),
                        new org.web3j.abi.datatypes.Utf8String(_assetId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final Function function = new Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isPlaceBindAsset(String _placeId) {
        final Function function = new Function(FUNC_ISPLACEBINDASSET,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> length() {
        final Function function = new Function(FUNC_LENGTH,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> placeAssetInserted(String param0) {
        final Function function = new Function(FUNC_PLACEASSETINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> placeAssetKey(BigInteger param0) {
        final Function function = new Function(FUNC_PLACEASSETKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>> placeAssets(String param0) {
        final Function function = new Function(FUNC_PLACEASSETS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    @Deprecated
    public static PlaceAssetContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceAssetContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PlaceAssetContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceAssetContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PlaceAssetContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PlaceAssetContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PlaceAssetContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PlaceAssetContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Getter
    @Setter
    @ToString
    public static class PlaceAsset extends DynamicStruct {
        public String placeAssetId;

        public String placeId;

        public String assetId;

        public BigInteger count;

        public BigInteger status;

        public PlaceAsset(String placeAssetId, String placeId, String assetId, BigInteger count, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(placeAssetId),new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(assetId),new org.web3j.abi.datatypes.generated.Uint256(count),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.placeAssetId = placeAssetId;
            this.placeId = placeId;
            this.assetId = assetId;
            this.count = count;
            this.status = status;
        }

        public PlaceAsset(Utf8String placeAssetId, Utf8String placeId, Utf8String assetId, Uint256 count, Uint256 status) {
            super(placeAssetId,placeId,assetId,count,status);
            this.placeAssetId = placeAssetId.getValue();
            this.placeId = placeId.getValue();
            this.assetId = assetId.getValue();
            this.count = count.getValue();
            this.status = status.getValue();
        }
    }
}
