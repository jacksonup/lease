package com.hdu.lease.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class PlaceAssetContract extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50612a94806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063637bf51a1161008c578063c65612da11610066578063c65612da1461024e578063d3911f731461026c578063e31bcfca1461028a578063fd346af6146102ba576100cf565b8063637bf51a146101be5780637ce7f1b7146101ee57806382d7a6e31461021e576100cf565b806309bfe26d146100d457806316166cb91461010457806328b78a8f1461012057806334d48e361461013e578063465c41051461015a5780634a69a7471461018a575b600080fd5b6100ee60048036038101906100e99190611aac565b6102d6565b6040516100fb9190611b72565b60405180910390f35b61011e60048036038101906101199190611aac565b610382565b005b61012861045c565b6040516101359190611d33565b60405180910390f35b61015860048036038101906101539190611e8a565b61076b565b005b610174600480360381019061016f9190611ed3565b610918565b6040516101819190611f66565b60405180910390f35b6101a4600480360381019061019f9190611e8a565b6109f5565b6040516101b5959493929190611f90565b60405180910390f35b6101d860048036038101906101d39190611e8a565b610bd9565b6040516101e59190611f66565b60405180910390f35b61020860048036038101906102039190611e8a565b610c0f565b6040516102159190611f66565b60405180910390f35b61023860048036038101906102339190612056565b610d21565b60405161024591906121b8565b60405180910390f35b6102566110f3565b604051610263919061225e565b60405180910390f35b6102746112f1565b60405161028191906122c4565b60405180910390f35b6102a4600480360381019061029f9190611e8a565b61137d565b6040516102b191906123a8565b60405180910390f35b6102d460048036038101906102cf919061259a565b6116c4565b005b600281815481106102e657600080fd5b90600052602060002001600091509050805461030190612612565b80601f016020809104026020016040519081016040528092919081815260200182805461032d90612612565b801561037a5780601f1061034f5761010080835404028352916020019161037a565b820191906000526020600020905b81548152906001019060200180831161035d57829003601f168201915b505050505081565b600060028054905090508082106103995750610459565b60008290505b6001826103ac9190612673565b8110156104265760026001826103c291906126a7565b815481106103d3576103d26126fd565b5b90600052602060002001600282815481106103f1576103f06126fd565b5b9060005260206000200190805461040790612612565b6104129291906118a9565b50808061041e9061272c565b91505061039f565b50600280548061043957610438612775565b5b6001900381819060005260206000200160006104559190611936565b9055505b50565b606060028054905067ffffffffffffffff81111561047d5761047c611d5f565b5b6040519080825280602002602001820160405280156104b657816020015b6104a3611976565b81526020019060019003908161049b5790505b5090506000805b600280549050811015610766576001600282815481106104e0576104df6126fd565b5b906000526020600020016040516104f79190612843565b908152602001604051809103902060009054906101000a900460ff16156107535760006002828154811061052e5761052d6126fd565b5b906000526020600020016040516105459190612843565b90815260200160405180910390206040518060a001604052908160008201805461056e90612612565b80601f016020809104026020016040519081016040528092919081815260200182805461059a90612612565b80156105e75780601f106105bc576101008083540402835291602001916105e7565b820191906000526020600020905b8154815290600101906020018083116105ca57829003601f168201915b5050505050815260200160018201805461060090612612565b80601f016020809104026020016040519081016040528092919081815260200182805461062c90612612565b80156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b5050505050815260200160028201805461069290612612565b80601f01602080910402602001604051908101604052809291908181526020018280546106be90612612565b801561070b5780601f106106e05761010080835404028352916020019161070b565b820191906000526020600020905b8154815290600101906020018083116106ee57829003601f168201915b50505050508152602001600382015481526020016004820154815250508383806107349061272c565b945081518110610747576107466126fd565b5b60200260200101819052505b808061075e9061272c565b9150506104bd565b505090565b60005b60028054905081101561091457600160028281548110610791576107906126fd565b5b906000526020600020016040516107a89190612843565b908152602001604051809103902060009054906101000a900460ff1615610901576108996000600283815481106107e2576107e16126fd565b5b906000526020600020016040516107f99190612843565b9081526020016040518091039020600201805461081590612612565b80601f016020809104026020016040519081016040528092919081815260200182805461084190612612565b801561088e5780601f106108635761010080835404028352916020019161088e565b820191906000526020600020905b81548152906001019060200180831161087157829003601f168201915b505050505083610918565b156109005760006001600283815481106108b6576108b56126fd565b5b906000526020600020016040516108cd9190612843565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506108fb81610382565b610914565b5b808061090c9061272c565b91505061076e565b5050565b60008083905060008390508051825114610937576000925050506109ef565b60005b82518110156109e757818181518110610956576109556126fd565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838281518110610996576109956126fd565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146109d457600093505050506109ef565b80806109df9061272c565b91505061093a565b506001925050505b92915050565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054610a2e90612612565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5a90612612565b8015610aa75780601f10610a7c57610100808354040283529160200191610aa7565b820191906000526020600020905b815481529060010190602001808311610a8a57829003601f168201915b505050505090806001018054610abc90612612565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae890612612565b8015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b505050505090806002018054610b4a90612612565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7690612612565b8015610bc35780601f10610b9857610100808354040283529160200191610bc3565b820191906000526020600020905b815481529060010190602001808311610ba657829003601f168201915b5050505050908060030154908060040154905085565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6000806000905060005b600280549050811015610d1757610cf6600060028381548110610c3f57610c3e6126fd565b5b90600052602060002001604051610c569190612843565b90815260200160405180910390206001018054610c7290612612565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9e90612612565b8015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b505050505085610918565b15610d045760019150610d17565b8080610d0f9061272c565b915050610c19565b5080915050919050565b60606000603267ffffffffffffffff811115610d4057610d3f611d5f565b5b604051908082528060200260200182016040528015610d7957816020015b610d666119a5565b815260200190600190039081610d5e5790505b50905060606000805b60028054905081101561103b57610e5f600060028381548110610da857610da76126fd565b5b90600052602060002001604051610dbf9190612843565b90815260200160405180910390206002018054610ddb90612612565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790612612565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b505050505087610918565b15611028578673ffffffffffffffffffffffffffffffffffffffff1663610ed5db600060028481548110610e9657610e956126fd565b5b90600052602060002001604051610ead9190612843565b90815260200160405180910390206001016040518263ffffffff1660e01b8152600401610eda91906128da565b600060405180830381865afa158015610ef7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f20919061296c565b92506040518060400160405280600060028481548110610f4357610f426126fd565b5b90600052602060002001604051610f5a9190612843565b90815260200160405180910390206001018054610f7690612612565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa290612612565b8015610fef5780601f10610fc457610100808354040283529160200191610fef565b820191906000526020600020905b815481529060010190602001808311610fd257829003601f168201915b50505050508152602001848152508483806110099061272c565b94508151811061101c5761101b6126fd565b5b60200260200101819052505b80806110339061272c565b915050610d82565b508067ffffffffffffffff81111561105657611055611d5f565b5b60405190808252806020026020018201604052801561108f57816020015b61107c6119a5565b8152602001906001900390816110745790505b50935060005b818110156110e9578381815181106110b0576110af6126fd565b5b60200260200101518582815181106110cb576110ca6126fd565b5b602002602001018190525080806110e19061272c565b915050611095565b5050505092915050565b6110fb611976565b600060405161110990612a01565b90815260200160405180910390206040518060a001604052908160008201805461113290612612565b80601f016020809104026020016040519081016040528092919081815260200182805461115e90612612565b80156111ab5780601f10611180576101008083540402835291602001916111ab565b820191906000526020600020905b81548152906001019060200180831161118e57829003601f168201915b505050505081526020016001820180546111c490612612565b80601f01602080910402602001604051908101604052809291908181526020018280546111f090612612565b801561123d5780601f106112125761010080835404028352916020019161123d565b820191906000526020600020905b81548152906001019060200180831161122057829003601f168201915b5050505050815260200160028201805461125690612612565b80601f016020809104026020016040519081016040528092919081815260200182805461128290612612565b80156112cf5780601f106112a4576101008083540402835291602001916112cf565b820191906000526020600020905b8154815290600101906020018083116112b257829003601f168201915b5050505050815260200160038201548152602001600482015481525050905090565b6112f96119a5565b60405180604001604052806040518060400160405280600381526020017f303030000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600481526020017f7465737400000000000000000000000000000000000000000000000000000000815250815250905090565b60606000603267ffffffffffffffff81111561139c5761139b611d5f565b5b6040519080825280602002602001820160405280156113cf57816020015b60608152602001906001900390816113ba5790505b5090506000805b60028054905081101561160e576001600282815481106113f9576113f86126fd565b5b906000526020600020016040516114109190612843565b908152602001604051809103902060009054906101000a900460ff168015611504575061150360006002838154811061144c5761144b6126fd565b5b906000526020600020016040516114639190612843565b9081526020016040518091039020600101805461147f90612612565b80601f01602080910402602001604051908101604052809291908181526020018280546114ab90612612565b80156114f85780601f106114cd576101008083540402835291602001916114f8565b820191906000526020600020905b8154815290600101906020018083116114db57829003601f168201915b505050505086610918565b5b156115fb5760006002828154811061151f5761151e6126fd565b5b906000526020600020016040516115369190612843565b9081526020016040518091039020600201805461155290612612565b80601f016020809104026020016040519081016040528092919081815260200182805461157e90612612565b80156115cb5780601f106115a0576101008083540402835291602001916115cb565b820191906000526020600020905b8154815290600101906020018083116115ae57829003601f168201915b50505050508383806115dc9061272c565b9450815181106115ef576115ee6126fd565b5b60200260200101819052505b80806116069061272c565b9150506113d6565b5060008167ffffffffffffffff81111561162b5761162a611d5f565b5b60405190808252806020026020018201604052801561165e57816020015b60608152602001906001900390816116495790505b50905060005b828110156116b85783818151811061167f5761167e6126fd565b5b602002602001015182828151811061169a576116996126fd565b5b602002602001018190525080806116b09061272c565b915050611664565b50809350505050919050565b60005b81518110156118a55760018282815181106116e5576116e46126fd565b5b6020026020010151600001516040516116fe9190612a47565b908152602001604051809103902060009054906101000a900460ff1661189257818181518110611731576117306126fd565b5b6020026020010151600083838151811061174e5761174d6126fd565b5b6020026020010151600001516040516117679190612a47565b908152602001604051809103902060008201518160000190805190602001906117919291906119bf565b5060208201518160010190805190602001906117ae9291906119bf565b5060408201518160020190805190602001906117cb9291906119bf565b5060608201518160030155608082015181600401559050506001808383815181106117f9576117f86126fd565b5b6020026020010151600001516040516118129190612a47565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600282828151811061184c5761184b6126fd565b5b6020026020010151600001519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906118909291906119bf565b505b808061189d9061272c565b9150506116c7565b5050565b8280546118b590612612565b90600052602060002090601f0160209004810192826118d75760008555611925565b82601f106118e85780548555611925565b8280016001018555821561192557600052602060002091601f016020900482015b82811115611924578254825591600101919060010190611909565b5b5090506119329190611a45565b5090565b50805461194290612612565b6000825580601f106119545750611973565b601f0160209004906000526020600020908101906119729190611a45565b5b50565b6040518060a0016040528060608152602001606081526020016060815260200160008152602001600081525090565b604051806040016040528060608152602001606081525090565b8280546119cb90612612565b90600052602060002090601f0160209004810192826119ed5760008555611a34565b82601f10611a0657805160ff1916838001178555611a34565b82800160010185558215611a34579182015b82811115611a33578251825591602001919060010190611a18565b5b509050611a419190611a45565b5090565b5b80821115611a5e576000816000905550600101611a46565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611a8981611a76565b8114611a9457600080fd5b50565b600081359050611aa681611a80565b92915050565b600060208284031215611ac257611ac1611a6c565b5b6000611ad084828501611a97565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b13578082015181840152602081019050611af8565b83811115611b22576000848401525b50505050565b6000601f19601f8301169050919050565b6000611b4482611ad9565b611b4e8185611ae4565b9350611b5e818560208601611af5565b611b6781611b28565b840191505092915050565b60006020820190508181036000830152611b8c8184611b39565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000611bdc82611ad9565b611be68185611bc0565b9350611bf6818560208601611af5565b611bff81611b28565b840191505092915050565b611c1381611a76565b82525050565b600060a0830160008301518482036000860152611c368282611bd1565b91505060208301518482036020860152611c508282611bd1565b91505060408301518482036040860152611c6a8282611bd1565b9150506060830151611c7f6060860182611c0a565b506080830151611c926080860182611c0a565b508091505092915050565b6000611ca98383611c19565b905092915050565b6000602082019050919050565b6000611cc982611b94565b611cd38185611b9f565b935083602082028501611ce585611bb0565b8060005b85811015611d215784840389528151611d028582611c9d565b9450611d0d83611cb1565b925060208a01995050600181019050611ce9565b50829750879550505050505092915050565b60006020820190508181036000830152611d4d8184611cbe565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d9782611b28565b810181811067ffffffffffffffff82111715611db657611db5611d5f565b5b80604052505050565b6000611dc9611a62565b9050611dd58282611d8e565b919050565b600067ffffffffffffffff821115611df557611df4611d5f565b5b611dfe82611b28565b9050602081019050919050565b82818337600083830152505050565b6000611e2d611e2884611dda565b611dbf565b905082815260208101848484011115611e4957611e48611d5a565b5b611e54848285611e0b565b509392505050565b600082601f830112611e7157611e70611d55565b5b8135611e81848260208601611e1a565b91505092915050565b600060208284031215611ea057611e9f611a6c565b5b600082013567ffffffffffffffff811115611ebe57611ebd611a71565b5b611eca84828501611e5c565b91505092915050565b60008060408385031215611eea57611ee9611a6c565b5b600083013567ffffffffffffffff811115611f0857611f07611a71565b5b611f1485828601611e5c565b925050602083013567ffffffffffffffff811115611f3557611f34611a71565b5b611f4185828601611e5c565b9150509250929050565b60008115159050919050565b611f6081611f4b565b82525050565b6000602082019050611f7b6000830184611f57565b92915050565b611f8a81611a76565b82525050565b600060a0820190508181036000830152611faa8188611b39565b90508181036020830152611fbe8187611b39565b90508181036040830152611fd28186611b39565b9050611fe16060830185611f81565b611fee6080830184611f81565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061202382611ff8565b9050919050565b61203381612018565b811461203e57600080fd5b50565b6000813590506120508161202a565b92915050565b6000806040838503121561206d5761206c611a6c565b5b600061207b85828601612041565b925050602083013567ffffffffffffffff81111561209c5761209b611a71565b5b6120a885828601611e5c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060408301600083015184820360008601526120fb8282611bd1565b915050602083015184820360208601526121158282611bd1565b9150508091505092915050565b600061212e83836120de565b905092915050565b6000602082019050919050565b600061214e826120b2565b61215881856120bd565b93508360208202850161216a856120ce565b8060005b858110156121a657848403895281516121878582612122565b945061219283612136565b925060208a0199505060018101905061216e565b50829750879550505050505092915050565b600060208201905081810360008301526121d28184612143565b905092915050565b600060a08301600083015184820360008601526121f78282611bd1565b915050602083015184820360208601526122118282611bd1565b9150506040830151848203604086015261222b8282611bd1565b91505060608301516122406060860182611c0a565b5060808301516122536080860182611c0a565b508091505092915050565b6000602082019050818103600083015261227881846121da565b905092915050565b6000604083016000830151848203600086015261229d8282611bd1565b915050602083015184820360208601526122b78282611bd1565b9150508091505092915050565b600060208201905081810360008301526122de8184612280565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061231e8383611bd1565b905092915050565b6000602082019050919050565b600061233e826122e6565b61234881856122f1565b93508360208202850161235a85612302565b8060005b8581101561239657848403895281516123778582612312565b945061238283612326565b925060208a0199505060018101905061235e565b50829750879550505050505092915050565b600060208201905081810360008301526123c28184612333565b905092915050565b600067ffffffffffffffff8211156123e5576123e4611d5f565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600060a0828403121561241b5761241a6123fb565b5b61242560a0611dbf565b9050600082013567ffffffffffffffff81111561244557612444612400565b5b61245184828501611e5c565b600083015250602082013567ffffffffffffffff81111561247557612474612400565b5b61248184828501611e5c565b602083015250604082013567ffffffffffffffff8111156124a5576124a4612400565b5b6124b184828501611e5c565b60408301525060606124c584828501611a97565b60608301525060806124d984828501611a97565b60808301525092915050565b60006124f86124f3846123ca565b611dbf565b9050808382526020820190506020840283018581111561251b5761251a6123f6565b5b835b8181101561256257803567ffffffffffffffff8111156125405761253f611d55565b5b80860161254d8982612405565b8552602085019450505060208101905061251d565b5050509392505050565b600082601f83011261258157612580611d55565b5b81356125918482602086016124e5565b91505092915050565b6000602082840312156125b0576125af611a6c565b5b600082013567ffffffffffffffff8111156125ce576125cd611a71565b5b6125da8482850161256c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061262a57607f821691505b6020821081141561263e5761263d6125e3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061267e82611a76565b915061268983611a76565b92508282101561269c5761269b612644565b5b828203905092915050565b60006126b282611a76565b91506126bd83611a76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126f2576126f1612644565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061273782611a76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561276a57612769612644565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081905092915050565b60008190508160005260206000209050919050565b600081546127d181612612565b6127db81866127a4565b945060018216600081146127f657600181146128075761283a565b60ff1983168652818601935061283a565b612810856127af565b60005b8381101561283257815481890152600182019150602081019050612813565b838801955050505b50505092915050565b600061284f82846127c4565b915081905092915050565b6000815461286781612612565b6128718186611ae4565b9450600182166000811461288c576001811461289e576128d1565b60ff19831686526020860193506128d1565b6128a7856127af565b60005b838110156128c9578154818901526001820191506020810190506128aa565b808801955050505b50505092915050565b600060208201905081810360008301526128f4818461285a565b905092915050565b600061290f61290a84611dda565b611dbf565b90508281526020810184848401111561292b5761292a611d5a565b5b612936848285611af5565b509392505050565b600082601f83011261295357612952611d55565b5b81516129638482602086016128fc565b91505092915050565b60006020828403121561298257612981611a6c565b5b600082015167ffffffffffffffff8111156129a05761299f611a71565b5b6129ac8482850161293e565b91505092915050565b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b60006129eb6001836127a4565b91506129f6826129b5565b600182019050919050565b6000612a0c826129de565b9150819050919050565b6000612a2182611ad9565b612a2b81856127a4565b9350612a3b818560208601611af5565b80840191505092915050565b6000612a538284612a16565b91508190509291505056fea2646970667358221220395891c1d8e2a8517b151a5e866a6d65ba4a2060f8f06c02f07e5b0e7e0ea4a764736f6c634300080a0033";

    public static final String FUNC_BINDASSET = "bindAsset";

    public static final String FUNC_DELETEBYASSETID = "deleteByAssetId";

    public static final String FUNC_GETASSETIDLISTBYPLACEID = "getAssetIdListByPlaceId";

    public static final String FUNC_GETPLACEASSET = "getPlaceAsset";

    public static final String FUNC_GETPLACEASSETLIST = "getPlaceAssetList";

    public static final String FUNC_GETPLACELIST = "getPlaceList";

    public static final String FUNC_GETPLACENAME = "getPlaceName";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_ISPLACEBINDASSET = "isPlaceBindAsset";

    public static final String FUNC_PLACEASSETINSERTED = "placeAssetInserted";

    public static final String FUNC_PLACEASSETKEY = "placeAssetKey";

    public static final String FUNC_PLACEASSETS = "placeAssets";

    public static final String FUNC_REMOVEPLACEASSETKEYATINDEX = "removePlaceAssetKeyAtIndex";

    @Deprecated
    protected PlaceAssetContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PlaceAssetContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PlaceAssetContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PlaceAssetContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> bindAsset(List<PlaceAsset> _placeAssets) {
        final Function function = new Function(
                FUNC_BINDASSET,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<PlaceAsset>(PlaceAsset.class, _placeAssets)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteByAssetId(String _assetId) {
        final Function function = new Function(
                FUNC_DELETEBYASSETID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_assetId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAssetIdListByPlaceId(String _placeId) {
        final Function function = new Function(FUNC_GETASSETIDLISTBYPLACEID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<PlaceAsset> getPlaceAsset() {
        final Function function = new Function(FUNC_GETPLACEASSET,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<PlaceAsset>() {}));
        return executeRemoteCallSingleValueReturn(function, PlaceAsset.class);
    }

    public RemoteFunctionCall<List> getPlaceAssetList() {
        final Function function = new Function(FUNC_GETPLACEASSETLIST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<PlaceAsset>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getPlaceList(String _placeContract, String _assetId) {
        final Function function = new Function(FUNC_GETPLACELIST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _placeContract),
                        new org.web3j.abi.datatypes.Utf8String(_assetId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<PlaceIdName>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<PlaceIdName> getPlaceName() {
        final Function function = new Function(FUNC_GETPLACENAME,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<PlaceIdName>() {}));
        return executeRemoteCallSingleValueReturn(function, PlaceIdName.class);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final Function function = new Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isPlaceBindAsset(String _placeId) {
        final Function function = new Function(FUNC_ISPLACEBINDASSET,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> placeAssetInserted(String param0) {
        final Function function = new Function(FUNC_PLACEASSETINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> placeAssetKey(BigInteger param0) {
        final Function function = new Function(FUNC_PLACEASSETKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>> placeAssets(String param0) {
        final Function function = new Function(FUNC_PLACEASSETS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> removePlaceAssetKeyAtIndex(BigInteger index) {
        final Function function = new Function(
                FUNC_REMOVEPLACEASSETKEYATINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static PlaceAssetContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceAssetContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PlaceAssetContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceAssetContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PlaceAssetContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PlaceAssetContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PlaceAssetContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PlaceAssetContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Getter
    @Setter
    @ToString
    public static class PlaceAsset extends DynamicStruct {
        public String placeAssetId;

        public String placeId;

        public String assetId;

        public BigInteger count;

        public BigInteger status;

        public PlaceAsset(String placeAssetId, String placeId, String assetId, BigInteger count, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(placeAssetId),new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(assetId),new org.web3j.abi.datatypes.generated.Uint256(count),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.placeAssetId = placeAssetId;
            this.placeId = placeId;
            this.assetId = assetId;
            this.count = count;
            this.status = status;
        }

        public PlaceAsset(Utf8String placeAssetId, Utf8String placeId, Utf8String assetId, Uint256 count, Uint256 status) {
            super(placeAssetId,placeId,assetId,count,status);
            this.placeAssetId = placeAssetId.getValue();
            this.placeId = placeId.getValue();
            this.assetId = assetId.getValue();
            this.count = count.getValue();
            this.status = status.getValue();
        }
    }

    @Getter
    @Setter
    @ToString
    public static class PlaceIdName extends DynamicStruct {
        public String placeId;

        public String placeName;

        public PlaceIdName(String placeId, String placeName) {
            super(new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(placeName));
            this.placeId = placeId;
            this.placeName = placeName;
        }

        public PlaceIdName(Utf8String placeId, Utf8String placeName) {
            super(placeId,placeName);
            this.placeId = placeId.getValue();
            this.placeName = placeName.getValue();
        }
    }
}
