package com.hdu.lease.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class PlaceContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b50612359806100296000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806389ec5b061161007157806389ec5b061461017e578063954aae641461019a5780639e4c78f4146101b8578063aab01b18146101e8578063f229561514610204578063f3bfddb714610220576100a9565b80631f7b6d32146100ae57806327ede887146100cc578063465c4105146100fc5780634bba74d11461012c57806374386a841461014a575b600080fd5b6100b6610250565b6040516100c39190611604565b60405180910390f35b6100e660048036038101906100e1919061165f565b610256565b6040516100f39190611725565b60405180910390f35b6101166004803603810190610111919061187c565b610302565b604051610123919061190f565b60405180910390f35b6101346103df565b6040516101419190611ad0565b60405180910390f35b610164600480360381019061015f9190611af2565b610780565b604051610175959493929190611b3b565b60405180910390f35b6101986004803603810190610193919061165f565b6109ec565b005b6101a2610aa6565b6040516101af9190611c35565b60405180910390f35b6101d260048036038101906101cd9190611af2565b610d2c565b6040516101df919061190f565b60405180910390f35b61020260048036038101906101fd9190611cb5565b610d62565b005b61021e60048036038101906102199190611e5a565b61105d565b005b61023a60048036038101906102359190611af2565b6111cb565b6040516102479190611c35565b60405180910390f35b60035481565b6002818154811061026657600080fd5b90600052602060002001600091509050805461028190611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546102ad90611ed2565b80156102fa5780601f106102cf576101008083540402835291602001916102fa565b820191906000526020600020905b8154815290600101906020018083116102dd57829003601f168201915b505050505081565b60008083905060008390508051825114610321576000925050506103d9565b60005b82518110156103d1578181815181106103405761033f611f04565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106103805761037f611f04565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103be57600093505050506103d9565b80806103c990611f62565b915050610324565b506001925050505b92915050565b6060600060035467ffffffffffffffff8111156103ff576103fe611751565b5b60405190808252806020026020018201604052801561043857816020015b61042561148c565b81526020019060019003908161041d5790505b5090506000805b6003548110156107775760016002828154811061045f5761045e611f04565b5b90600052602060002001604051610476919061204a565b908152602001604051809103902060009054906101000a900460ff161561075e576000600282815481106104ad576104ac611f04565b5b906000526020600020016040516104c4919061204a565b90815260200160405180910390206040518060a00160405290816000820180546104ed90611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461051990611ed2565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050815260200160018201805461057f90611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab90611ed2565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050815260200160028201805461061190611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461063d90611ed2565b801561068a5780601f1061065f5761010080835404028352916020019161068a565b820191906000526020600020905b81548152906001019060200180831161066d57829003601f168201915b505050505081526020016003820180546106a390611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90611ed2565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b5050505050815260200160048201548152505083838061073b90611f62565b94508151811061074e5761074d611f04565b5b6020026020010181905250610763565b610764565b5b808061076f90611f62565b91505061043f565b50819250505090565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546107b990611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546107e590611ed2565b80156108325780601f1061080757610100808354040283529160200191610832565b820191906000526020600020905b81548152906001019060200180831161081557829003601f168201915b50505050509080600101805461084790611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461087390611ed2565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b5050505050908060020180546108d590611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461090190611ed2565b801561094e5780601f106109235761010080835404028352916020019161094e565b820191906000526020600020905b81548152906001019060200180831161093157829003601f168201915b50505050509080600301805461096390611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461098f90611ed2565b80156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b5050505050908060040154905085565b60035481106109fa57610aa3565b60008190505b6001600354610a0f9190612061565b811015610a89576002600182610a259190612095565b81548110610a3657610a35611f04565b5b9060005260206000200160028281548110610a5457610a53611f04565b5b90600052602060002001908054610a6a90611ed2565b610a759291906114bb565b508080610a8190611f62565b915050610a00565b5060036000815480929190610a9d906120eb565b91905055505b50565b610aae61148c565b6000604051610abc90612161565b90815260200160405180910390206040518060a0016040529081600082018054610ae590611ed2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1190611ed2565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b50505050508152602001600182018054610b7790611ed2565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba390611ed2565b8015610bf05780601f10610bc557610100808354040283529160200191610bf0565b820191906000526020600020905b815481529060010190602001808311610bd357829003601f168201915b50505050508152602001600282018054610c0990611ed2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3590611ed2565b8015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b50505050508152602001600382018054610c9b90611ed2565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc790611ed2565b8015610d145780601f10610ce957610100808354040283529160200191610d14565b820191906000526020600020905b815481529060010190602001808311610cf757829003601f168201915b50505050508152602001600482015481525050905090565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b8373ffffffffffffffffffffffffffffffffffffffff166367f58d19836040518263ffffffff1660e01b8152600401610d9b9190611725565b602060405180830381865afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc91906121a2565b1561101d578273ffffffffffffffffffffffffffffffffffffffff16637ce7f1b7826040518263ffffffff1660e01b8152600401610e1a9190611725565b602060405180830381865afa158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b91906121a2565b15610e9e577f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e432447366320612712604051610e919190612214565b60405180910390a1611057565b6001600082604051610eb09190612260565b9081526020016040518091039020600401819055506000600182604051610ed79190612260565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060005b600354811015610fd657610fb960028281548110610f2057610f1f611f04565b5b906000526020600020018054610f3590611ed2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6190611ed2565b8015610fae5780601f10610f8357610100808354040283529160200191610fae565b820191906000526020600020905b815481529060010190602001808311610f9157829003601f168201915b505050505083610302565b15610fc357610fd6565b8080610fce90611f62565b915050610eff565b610fdf816109ec565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e43244736632060c860405161100f91906122b2565b60405180910390a150611057565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e43244736632061271160405161104e9190612308565b60405180910390a15b50505050565b600181600001516040516110719190612260565b908152602001604051809103902060009054906101000a900460ff166111c85780600082600001516040516110a69190612260565b908152602001604051809103902060008201518160000190805190602001906110d0929190611548565b5060208201518160010190805190602001906110ed929190611548565b50604082015181600201908051906020019061110a929190611548565b506060820151816003019080519060200190611127929190611548565b5060808201518160040155905050600180826000015160405161114a9190612260565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600281600001519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906111ae929190611548565b50600360008154809291906111c290611f62565b91905055505b50565b6111d361148c565b6001826040516111e39190612260565b908152602001604051809103902060009054906101000a900460ff1615611486576000826040516112149190612260565b90815260200160405180910390206040518060a001604052908160008201805461123d90611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461126990611ed2565b80156112b65780601f1061128b576101008083540402835291602001916112b6565b820191906000526020600020905b81548152906001019060200180831161129957829003601f168201915b505050505081526020016001820180546112cf90611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546112fb90611ed2565b80156113485780601f1061131d57610100808354040283529160200191611348565b820191906000526020600020905b81548152906001019060200180831161132b57829003601f168201915b5050505050815260200160028201805461136190611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461138d90611ed2565b80156113da5780601f106113af576101008083540402835291602001916113da565b820191906000526020600020905b8154815290600101906020018083116113bd57829003601f168201915b505050505081526020016003820180546113f390611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461141f90611ed2565b801561146c5780601f106114415761010080835404028352916020019161146c565b820191906000526020600020905b81548152906001019060200180831161144f57829003601f168201915b505050505081526020016004820154815250509050611487565b5b919050565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001600081525090565b8280546114c790611ed2565b90600052602060002090601f0160209004810192826114e95760008555611537565b82601f106114fa5780548555611537565b8280016001018555821561153757600052602060002091601f016020900482015b8281111561153657825482559160010191906001019061151b565b5b50905061154491906115ce565b5090565b82805461155490611ed2565b90600052602060002090601f01602090048101928261157657600085556115bd565b82601f1061158f57805160ff19168380011785556115bd565b828001600101855582156115bd579182015b828111156115bc5782518255916020019190600101906115a1565b5b5090506115ca91906115ce565b5090565b5b808211156115e75760008160009055506001016115cf565b5090565b6000819050919050565b6115fe816115eb565b82525050565b600060208201905061161960008301846115f5565b92915050565b6000604051905090565b600080fd5b600080fd5b61163c816115eb565b811461164757600080fd5b50565b60008135905061165981611633565b92915050565b60006020828403121561167557611674611629565b5b60006116838482850161164a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116c65780820151818401526020810190506116ab565b838111156116d5576000848401525b50505050565b6000601f19601f8301169050919050565b60006116f78261168c565b6117018185611697565b93506117118185602086016116a8565b61171a816116db565b840191505092915050565b6000602082019050818103600083015261173f81846116ec565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611789826116db565b810181811067ffffffffffffffff821117156117a8576117a7611751565b5b80604052505050565b60006117bb61161f565b90506117c78282611780565b919050565b600067ffffffffffffffff8211156117e7576117e6611751565b5b6117f0826116db565b9050602081019050919050565b82818337600083830152505050565b600061181f61181a846117cc565b6117b1565b90508281526020810184848401111561183b5761183a61174c565b5b6118468482856117fd565b509392505050565b600082601f83011261186357611862611747565b5b813561187384826020860161180c565b91505092915050565b6000806040838503121561189357611892611629565b5b600083013567ffffffffffffffff8111156118b1576118b061162e565b5b6118bd8582860161184e565b925050602083013567ffffffffffffffff8111156118de576118dd61162e565b5b6118ea8582860161184e565b9150509250929050565b60008115159050919050565b611909816118f4565b82525050565b60006020820190506119246000830184611900565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006119728261168c565b61197c8185611956565b935061198c8185602086016116a8565b611995816116db565b840191505092915050565b6119a9816115eb565b82525050565b600060a08301600083015184820360008601526119cc8282611967565b915050602083015184820360208601526119e68282611967565b91505060408301518482036040860152611a008282611967565b91505060608301518482036060860152611a1a8282611967565b9150506080830151611a2f60808601826119a0565b508091505092915050565b6000611a4683836119af565b905092915050565b6000602082019050919050565b6000611a668261192a565b611a708185611935565b935083602082028501611a8285611946565b8060005b85811015611abe5784840389528151611a9f8582611a3a565b9450611aaa83611a4e565b925060208a01995050600181019050611a86565b50829750879550505050505092915050565b60006020820190508181036000830152611aea8184611a5b565b905092915050565b600060208284031215611b0857611b07611629565b5b600082013567ffffffffffffffff811115611b2657611b2561162e565b5b611b328482850161184e565b91505092915050565b600060a0820190508181036000830152611b5581886116ec565b90508181036020830152611b6981876116ec565b90508181036040830152611b7d81866116ec565b90508181036060830152611b9181856116ec565b9050611ba060808301846115f5565b9695505050505050565b600060a0830160008301518482036000860152611bc78282611967565b91505060208301518482036020860152611be18282611967565b91505060408301518482036040860152611bfb8282611967565b91505060608301518482036060860152611c158282611967565b9150506080830151611c2a60808601826119a0565b508091505092915050565b60006020820190508181036000830152611c4f8184611baa565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c8282611c57565b9050919050565b611c9281611c77565b8114611c9d57600080fd5b50565b600081359050611caf81611c89565b92915050565b60008060008060808587031215611ccf57611cce611629565b5b6000611cdd87828801611ca0565b9450506020611cee87828801611ca0565b935050604085013567ffffffffffffffff811115611d0f57611d0e61162e565b5b611d1b8782880161184e565b925050606085013567ffffffffffffffff811115611d3c57611d3b61162e565b5b611d488782880161184e565b91505092959194509250565b600080fd5b600080fd5b600060a08284031215611d7457611d73611d54565b5b611d7e60a06117b1565b9050600082013567ffffffffffffffff811115611d9e57611d9d611d59565b5b611daa8482850161184e565b600083015250602082013567ffffffffffffffff811115611dce57611dcd611d59565b5b611dda8482850161184e565b602083015250604082013567ffffffffffffffff811115611dfe57611dfd611d59565b5b611e0a8482850161184e565b604083015250606082013567ffffffffffffffff811115611e2e57611e2d611d59565b5b611e3a8482850161184e565b6060830152506080611e4e8482850161164a565b60808301525092915050565b600060208284031215611e7057611e6f611629565b5b600082013567ffffffffffffffff811115611e8e57611e8d61162e565b5b611e9a84828501611d5e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611eea57607f821691505b60208210811415611efe57611efd611ea3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f6d826115eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fa057611f9f611f33565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611fd881611ed2565b611fe28186611fab565b94506001821660008114611ffd576001811461200e57612041565b60ff19831686528186019350612041565b61201785611fb6565b60005b838110156120395781548189015260018201915060208101905061201a565b838801955050505b50505092915050565b60006120568284611fcb565b915081905092915050565b600061206c826115eb565b9150612077836115eb565b92508282101561208a57612089611f33565b5b828203905092915050565b60006120a0826115eb565b91506120ab836115eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120e0576120df611f33565b5b828201905092915050565b60006120f6826115eb565b9150600082141561210a57612109611f33565b5b600182039050919050565b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b600061214b600183611fab565b915061215682612115565b600182019050919050565b600061216c8261213e565b9150819050919050565b61217f816118f4565b811461218a57600080fd5b50565b60008151905061219c81612176565b92915050565b6000602082840312156121b8576121b7611629565b5b60006121c68482850161218d565b91505092915050565b6000819050919050565b6000819050919050565b60006121fe6121f96121f4846121cf565b6121d9565b6115eb565b9050919050565b61220e816121e3565b82525050565b60006020820190506122296000830184612205565b92915050565b600061223a8261168c565b6122448185611fab565b93506122548185602086016116a8565b80840191505092915050565b600061226c828461222f565b915081905092915050565b6000819050919050565b600061229c61229761229284612277565b6121d9565b6115eb565b9050919050565b6122ac81612281565b82525050565b60006020820190506122c760008301846122a3565b92915050565b6000819050919050565b60006122f26122ed6122e8846122cd565b6121d9565b6115eb565b9050919050565b612302816122d7565b82525050565b600060208201905061231d60008301846122f9565b9291505056fea26469706673582212205533c62abb679d2440c3d1f97f5d04b56ddfa72fb3ae6dd485cc7b326b3ab52564736f6c634300080a0033";

    public static final String FUNC_CREATEPLACE = "createPlace";

    public static final String FUNC_DELETEPLACE = "deletePlace";

    public static final String FUNC_GETALLPLACELIST = "getAllPlaceList";

    public static final String FUNC_GETBYID = "getById";

    public static final String FUNC_GETPLACEINFO = "getPlaceInfo";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_LENGTH = "length";

    public static final String FUNC_PLACEINSERTED = "placeInserted";

    public static final String FUNC_PLACEKEY = "placeKey";

    public static final String FUNC_PLACES = "places";

    public static final String FUNC_REMOVEPLACEKEYATINDEX = "removePlaceKeyAtIndex";

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> createPlace(Place _place) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEPLACE,
                Arrays.<Type>asList(_place),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deletePlace(String _userContract, String _placeAssetContract, String _account, String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETEPLACE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userContract),
                        new org.web3j.abi.datatypes.Address(160, _placeAssetContract),
                        new org.web3j.abi.datatypes.Utf8String(_account),
                        new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAllPlaceList() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALLPLACELIST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Place>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Place> getById(String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBYID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<Place> getPlaceInfo() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLACEINFO,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> length() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_LENGTH,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> placeInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> placeKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>> places(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> removePlaceKeyAtIndex(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLACEKEYATINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
    @Getter
    @Setter
    @ToString
    public static class Place extends DynamicStruct {
        public String placeId;

        public String placeName;

        public String placeAddress;

        public String placeManagerAccount;

        public BigInteger status;

        public Place(String placeId, String placeName, String placeAddress, String placeManagerAccount, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(placeName),new org.web3j.abi.datatypes.Utf8String(placeAddress),new org.web3j.abi.datatypes.Utf8String(placeManagerAccount),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.placeId = placeId;
            this.placeName = placeName;
            this.placeAddress = placeAddress;
            this.placeManagerAccount = placeManagerAccount;
            this.status = status;
        }

        public Place(Utf8String placeId, Utf8String placeName, Utf8String placeAddress, Utf8String placeManagerAccount, Uint256 status) {
            super(placeId,placeName,placeAddress,placeManagerAccount,status);
            this.placeId = placeId.getValue();
            this.placeName = placeName.getValue();
            this.placeAddress = placeAddress.getValue();
            this.placeManagerAccount = placeManagerAccount.getValue();
            this.status = status.getValue();
        }
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public BigInteger code;
    }
}
