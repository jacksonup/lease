package com.hdu.lease.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class PlaceContract extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50612c7d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806389ec5b061161008c578063aab01b1811610066578063aab01b1814610250578063bb88b6301461026c578063f229561514610288578063f3bfddb7146102a4576100cf565b806389ec5b06146101e6578063954aae64146102025780639e4c78f414610220576100cf565b806327ede887146100d4578063465c4105146101045780634bba74d114610134578063610ed5db1461015257806374386a8414610182578063850f48ac146101b6575b600080fd5b6100ee60048036038101906100e99190611f19565b6102d4565b6040516100fb9190611fdf565b60405180910390f35b61011e60048036038101906101199190612136565b610380565b60405161012b91906121c9565b60405180910390f35b61013c61045d565b604051610149919061238a565b60405180910390f35b61016c600480360381019061016791906123ac565b610901565b6040516101799190611fdf565b60405180910390f35b61019c600480360381019061019791906123ac565b6109eb565b6040516101ad959493929190612404565b60405180910390f35b6101d060048036038101906101cb91906123ac565b610c57565b6040516101dd919061238a565b60405180910390f35b61020060048036038101906101fb9190611f19565b611134565b005b61020a61120e565b60405161021791906124fe565b60405180910390f35b61023a600480360381019061023591906123ac565b611494565b60405161024791906121c9565b60405180910390f35b61026a6004803603810190610265919061257e565b6114ca565b005b61028660048036038101906102819190612723565b61183c565b005b6102a2600480360381019061029d9190612723565b611919565b005b6102be60048036038101906102b991906123ac565b611a6f565b6040516102cb91906124fe565b60405180910390f35b600281815481106102e457600080fd5b9060005260206000200160009150905080546102ff9061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461032b9061279b565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b505050505081565b6000808390506000839050805182511461039f57600092505050610457565b60005b825181101561044f578181815181106103be576103bd6127cd565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106103fe576103fd6127cd565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461043c5760009350505050610457565b80806104479061282b565b9150506103a2565b506001925050505b92915050565b60606000600280549050905060008167ffffffffffffffff8111156104855761048461200b565b5b6040519080825280602002602001820160405280156104be57816020015b6104ab611d30565b8152602001906001900390816104a35790505b5090506000805b83811015610846576001600282815481106104e3576104e26127cd565b5b906000526020600020016040516104fa9190612913565b908152602001604051809103902060009054906101000a900460ff16801561056157506001600060028381548110610535576105346127cd565b5b9060005260206000200160405161054c9190612913565b90815260200160405180910390206004015414155b1561082d5760006002828154811061057c5761057b6127cd565b5b906000526020600020016040516105939190612913565b90815260200160405180910390206040518060a00160405290816000820180546105bc9061279b565b80601f01602080910402602001604051908101604052809291908181526020018280546105e89061279b565b80156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b5050505050815260200160018201805461064e9061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461067a9061279b565b80156106c75780601f1061069c576101008083540402835291602001916106c7565b820191906000526020600020905b8154815290600101906020018083116106aa57829003601f168201915b505050505081526020016002820180546106e09061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461070c9061279b565b80156107595780601f1061072e57610100808354040283529160200191610759565b820191906000526020600020905b81548152906001019060200180831161073c57829003601f168201915b505050505081526020016003820180546107729061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461079e9061279b565b80156107eb5780601f106107c0576101008083540402835291602001916107eb565b820191906000526020600020905b8154815290600101906020018083116107ce57829003601f168201915b5050505050815260200160048201548152505083838061080a9061282b565b94508151811061081d5761081c6127cd565b5b6020026020010181905250610832565b610833565b5b808061083e9061282b565b9150506104c5565b5060008167ffffffffffffffff8111156108635761086261200b565b5b60405190808252806020026020018201604052801561089c57816020015b610889611d30565b8152602001906001900390816108815790505b50905060005b828110156108f6578381815181106108bd576108bc6127cd565b5b60200260200101518282815181106108d8576108d76127cd565b5b602002602001018190525080806108ee9061282b565b9150506108a2565b508094505050505090565b6060600182604051610913919061295b565b908152602001604051809103902060009054906101000a900460ff16156109e557600082604051610944919061295b565b908152602001604051809103902060010180546109609061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461098c9061279b565b80156109d95780601f106109ae576101008083540402835291602001916109d9565b820191906000526020600020905b8154815290600101906020018083116109bc57829003601f168201915b505050505090506109e6565b5b919050565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054610a249061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a509061279b565b8015610a9d5780601f10610a7257610100808354040283529160200191610a9d565b820191906000526020600020905b815481529060010190602001808311610a8057829003601f168201915b505050505090806001018054610ab29061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ade9061279b565b8015610b2b5780601f10610b0057610100808354040283529160200191610b2b565b820191906000526020600020905b815481529060010190602001808311610b0e57829003601f168201915b505050505090806002018054610b409061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6c9061279b565b8015610bb95780601f10610b8e57610100808354040283529160200191610bb9565b820191906000526020600020905b815481529060010190602001808311610b9c57829003601f168201915b505050505090806003018054610bce9061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfa9061279b565b8015610c475780601f10610c1c57610100808354040283529160200191610c47565b820191906000526020600020905b815481529060010190602001808311610c2a57829003601f168201915b5050505050908060040154905085565b6060600060028054905067ffffffffffffffff811115610c7a57610c7961200b565b5b604051908082528060200260200182016040528015610cb357816020015b610ca0611d30565b815260200190600190039081610c985790505b509050600080600280549050905060005b8181101561107757610d9c600060028381548110610ce557610ce46127cd565b5b90600052602060002001604051610cfc9190612913565b90815260200160405180910390206003018054610d189061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610d449061279b565b8015610d915780601f10610d6657610100808354040283529160200191610d91565b820191906000526020600020905b815481529060010190602001808311610d7457829003601f168201915b505050505087610380565b1561106457600060028281548110610db757610db66127cd565b5b90600052602060002001604051610dce9190612913565b90815260200160405180910390206040518060a0016040529081600082018054610df79061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e239061279b565b8015610e705780601f10610e4557610100808354040283529160200191610e70565b820191906000526020600020905b815481529060010190602001808311610e5357829003601f168201915b50505050508152602001600182018054610e899061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb59061279b565b8015610f025780601f10610ed757610100808354040283529160200191610f02565b820191906000526020600020905b815481529060010190602001808311610ee557829003601f168201915b50505050508152602001600282018054610f1b9061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f479061279b565b8015610f945780601f10610f6957610100808354040283529160200191610f94565b820191906000526020600020905b815481529060010190602001808311610f7757829003601f168201915b50505050508152602001600382018054610fad9061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd99061279b565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b505050505081526020016004820154815250508484806110459061282b565b955081518110611058576110576127cd565b5b60200260200101819052505b808061106f9061282b565b915050610cc4565b5060008267ffffffffffffffff8111156110945761109361200b565b5b6040519080825280602002602001820160405280156110cd57816020015b6110ba611d30565b8152602001906001900390816110b25790505b50905060005b83811015611127578481815181106110ee576110ed6127cd565b5b6020026020010151828281518110611109576111086127cd565b5b6020026020010181905250808061111f9061282b565b9150506110d3565b5080945050505050919050565b6000600280549050905080821061114b575061120b565b60008290505b60018261115e9190612972565b8110156111d857600260018261117491906129a6565b81548110611185576111846127cd565b5b90600052602060002001600282815481106111a3576111a26127cd565b5b906000526020600020019080546111b99061279b565b6111c4929190611d5f565b5080806111d09061282b565b915050611151565b5060028054806111eb576111ea6129fc565b5b6001900381819060005260206000200160006112079190611dec565b9055505b50565b611216611d30565b600060405161122490612a77565b90815260200160405180910390206040518060a001604052908160008201805461124d9061279b565b80601f01602080910402602001604051908101604052809291908181526020018280546112799061279b565b80156112c65780601f1061129b576101008083540402835291602001916112c6565b820191906000526020600020905b8154815290600101906020018083116112a957829003601f168201915b505050505081526020016001820180546112df9061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461130b9061279b565b80156113585780601f1061132d57610100808354040283529160200191611358565b820191906000526020600020905b81548152906001019060200180831161133b57829003601f168201915b505050505081526020016002820180546113719061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461139d9061279b565b80156113ea5780601f106113bf576101008083540402835291602001916113ea565b820191906000526020600020905b8154815290600101906020018083116113cd57829003601f168201915b505050505081526020016003820180546114039061279b565b80601f016020809104026020016040519081016040528092919081815260200182805461142f9061279b565b801561147c5780601f106114515761010080835404028352916020019161147c565b820191906000526020600020905b81548152906001019060200180831161145f57829003601f168201915b50505050508152602001600482015481525050905090565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b8373ffffffffffffffffffffffffffffffffffffffff166367f58d19836040518263ffffffff1660e01b81526004016115039190611fdf565b602060405180830381865afa158015611520573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115449190612ab8565b156117f7578273ffffffffffffffffffffffffffffffffffffffff16637ce7f1b7826040518263ffffffff1660e01b81526004016115829190611fdf565b602060405180830381865afa15801561159f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c39190612ab8565b15611606577f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e4324473663206127126040516115f99190612b2a565b60405180910390a1611836565b600181604051611616919061295b565b908152602001604051809103902060009054906101000a900460ff16156117b9576001600082604051611649919061295b565b9081526020016040518091039020600401819055506000600182604051611670919061295b565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060005b60028054905081101561177257611755600282815481106116bc576116bb6127cd565b5b9060005260206000200180546116d19061279b565b80601f01602080910402602001604051908101604052809291908181526020018280546116fd9061279b565b801561174a5780601f1061171f5761010080835404028352916020019161174a565b820191906000526020600020905b81548152906001019060200180831161172d57829003601f168201915b505050505083610380565b1561175f57611772565b808061176a9061282b565b915050611698565b61177b81611134565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e43244736632060c86040516117ab9190612b80565b60405180910390a150611836565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e4324473663206127136040516117ea9190612bd6565b60405180910390a1611835565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e4324473663206127116040516118289190612c2c565b60405180910390a1611836565b5b50505050565b60018160000151604051611850919061295b565b908152602001604051809103902060009054906101000a900460ff1615611916578060008260000151604051611886919061295b565b908152602001604051809103902060008201518160000190805190602001906118b0929190611e2c565b5060208201518160010190805190602001906118cd929190611e2c565b5060408201518160020190805190602001906118ea929190611e2c565b506060820151816003019080519060200190611907929190611e2c565b50608082015181600401559050505b50565b6001816000015160405161192d919061295b565b908152602001604051809103902060009054906101000a900460ff16611a6c578060008260000151604051611962919061295b565b9081526020016040518091039020600082015181600001908051906020019061198c929190611e2c565b5060208201518160010190805190602001906119a9929190611e2c565b5060408201518160020190805190602001906119c6929190611e2c565b5060608201518160030190805190602001906119e3929190611e2c565b50608082015181600401559050506001808260000151604051611a06919061295b565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060028160000151908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611a6a929190611e2c565b505b50565b611a77611d30565b600182604051611a87919061295b565b908152602001604051809103902060009054906101000a900460ff1615611d2a57600082604051611ab8919061295b565b90815260200160405180910390206040518060a0016040529081600082018054611ae19061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054611b0d9061279b565b8015611b5a5780601f10611b2f57610100808354040283529160200191611b5a565b820191906000526020600020905b815481529060010190602001808311611b3d57829003601f168201915b50505050508152602001600182018054611b739061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9f9061279b565b8015611bec5780601f10611bc157610100808354040283529160200191611bec565b820191906000526020600020905b815481529060010190602001808311611bcf57829003601f168201915b50505050508152602001600282018054611c059061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054611c319061279b565b8015611c7e5780601f10611c5357610100808354040283529160200191611c7e565b820191906000526020600020905b815481529060010190602001808311611c6157829003601f168201915b50505050508152602001600382018054611c979061279b565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc39061279b565b8015611d105780601f10611ce557610100808354040283529160200191611d10565b820191906000526020600020905b815481529060010190602001808311611cf357829003601f168201915b505050505081526020016004820154815250509050611d2b565b5b919050565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001600081525090565b828054611d6b9061279b565b90600052602060002090601f016020900481019282611d8d5760008555611ddb565b82601f10611d9e5780548555611ddb565b82800160010185558215611ddb57600052602060002091601f016020900482015b82811115611dda578254825591600101919060010190611dbf565b5b509050611de89190611eb2565b5090565b508054611df89061279b565b6000825580601f10611e0a5750611e29565b601f016020900490600052602060002090810190611e289190611eb2565b5b50565b828054611e389061279b565b90600052602060002090601f016020900481019282611e5a5760008555611ea1565b82601f10611e7357805160ff1916838001178555611ea1565b82800160010185558215611ea1579182015b82811115611ea0578251825591602001919060010190611e85565b5b509050611eae9190611eb2565b5090565b5b80821115611ecb576000816000905550600101611eb3565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611ef681611ee3565b8114611f0157600080fd5b50565b600081359050611f1381611eed565b92915050565b600060208284031215611f2f57611f2e611ed9565b5b6000611f3d84828501611f04565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f80578082015181840152602081019050611f65565b83811115611f8f576000848401525b50505050565b6000601f19601f8301169050919050565b6000611fb182611f46565b611fbb8185611f51565b9350611fcb818560208601611f62565b611fd481611f95565b840191505092915050565b60006020820190508181036000830152611ff98184611fa6565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61204382611f95565b810181811067ffffffffffffffff821117156120625761206161200b565b5b80604052505050565b6000612075611ecf565b9050612081828261203a565b919050565b600067ffffffffffffffff8211156120a1576120a061200b565b5b6120aa82611f95565b9050602081019050919050565b82818337600083830152505050565b60006120d96120d484612086565b61206b565b9050828152602081018484840111156120f5576120f4612006565b5b6121008482856120b7565b509392505050565b600082601f83011261211d5761211c612001565b5b813561212d8482602086016120c6565b91505092915050565b6000806040838503121561214d5761214c611ed9565b5b600083013567ffffffffffffffff81111561216b5761216a611ede565b5b61217785828601612108565b925050602083013567ffffffffffffffff81111561219857612197611ede565b5b6121a485828601612108565b9150509250929050565b60008115159050919050565b6121c3816121ae565b82525050565b60006020820190506121de60008301846121ba565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061222c82611f46565b6122368185612210565b9350612246818560208601611f62565b61224f81611f95565b840191505092915050565b61226381611ee3565b82525050565b600060a08301600083015184820360008601526122868282612221565b915050602083015184820360208601526122a08282612221565b915050604083015184820360408601526122ba8282612221565b915050606083015184820360608601526122d48282612221565b91505060808301516122e9608086018261225a565b508091505092915050565b60006123008383612269565b905092915050565b6000602082019050919050565b6000612320826121e4565b61232a81856121ef565b93508360208202850161233c85612200565b8060005b85811015612378578484038952815161235985826122f4565b945061236483612308565b925060208a01995050600181019050612340565b50829750879550505050505092915050565b600060208201905081810360008301526123a48184612315565b905092915050565b6000602082840312156123c2576123c1611ed9565b5b600082013567ffffffffffffffff8111156123e0576123df611ede565b5b6123ec84828501612108565b91505092915050565b6123fe81611ee3565b82525050565b600060a082019050818103600083015261241e8188611fa6565b905081810360208301526124328187611fa6565b905081810360408301526124468186611fa6565b9050818103606083015261245a8185611fa6565b905061246960808301846123f5565b9695505050505050565b600060a08301600083015184820360008601526124908282612221565b915050602083015184820360208601526124aa8282612221565b915050604083015184820360408601526124c48282612221565b915050606083015184820360608601526124de8282612221565b91505060808301516124f3608086018261225a565b508091505092915050565b600060208201905081810360008301526125188184612473565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061254b82612520565b9050919050565b61255b81612540565b811461256657600080fd5b50565b60008135905061257881612552565b92915050565b6000806000806080858703121561259857612597611ed9565b5b60006125a687828801612569565b94505060206125b787828801612569565b935050604085013567ffffffffffffffff8111156125d8576125d7611ede565b5b6125e487828801612108565b925050606085013567ffffffffffffffff81111561260557612604611ede565b5b61261187828801612108565b91505092959194509250565b600080fd5b600080fd5b600060a0828403121561263d5761263c61261d565b5b61264760a061206b565b9050600082013567ffffffffffffffff81111561266757612666612622565b5b61267384828501612108565b600083015250602082013567ffffffffffffffff81111561269757612696612622565b5b6126a384828501612108565b602083015250604082013567ffffffffffffffff8111156126c7576126c6612622565b5b6126d384828501612108565b604083015250606082013567ffffffffffffffff8111156126f7576126f6612622565b5b61270384828501612108565b606083015250608061271784828501611f04565b60808301525092915050565b60006020828403121561273957612738611ed9565b5b600082013567ffffffffffffffff81111561275757612756611ede565b5b61276384828501612627565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806127b357607f821691505b602082108114156127c7576127c661276c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061283682611ee3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612869576128686127fc565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546128a18161279b565b6128ab8186612874565b945060018216600081146128c657600181146128d75761290a565b60ff1983168652818601935061290a565b6128e08561287f565b60005b83811015612902578154818901526001820191506020810190506128e3565b838801955050505b50505092915050565b600061291f8284612894565b915081905092915050565b600061293582611f46565b61293f8185612874565b935061294f818560208601611f62565b80840191505092915050565b6000612967828461292a565b915081905092915050565b600061297d82611ee3565b915061298883611ee3565b92508282101561299b5761299a6127fc565b5b828203905092915050565b60006129b182611ee3565b91506129bc83611ee3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156129f1576129f06127fc565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a61600183612874565b9150612a6c82612a2b565b600182019050919050565b6000612a8282612a54565b9150819050919050565b612a95816121ae565b8114612aa057600080fd5b50565b600081519050612ab281612a8c565b92915050565b600060208284031215612ace57612acd611ed9565b5b6000612adc84828501612aa3565b91505092915050565b6000819050919050565b6000819050919050565b6000612b14612b0f612b0a84612ae5565b612aef565b611ee3565b9050919050565b612b2481612af9565b82525050565b6000602082019050612b3f6000830184612b1b565b92915050565b6000819050919050565b6000612b6a612b65612b6084612b45565b612aef565b611ee3565b9050919050565b612b7a81612b4f565b82525050565b6000602082019050612b956000830184612b71565b92915050565b6000819050919050565b6000612bc0612bbb612bb684612b9b565b612aef565b611ee3565b9050919050565b612bd081612ba5565b82525050565b6000602082019050612beb6000830184612bc7565b92915050565b6000819050919050565b6000612c16612c11612c0c84612bf1565b612aef565b611ee3565b9050919050565b612c2681612bfb565b82525050565b6000602082019050612c416000830184612c1d565b9291505056fea2646970667358221220c07a703659d4cd5f34024d95881deac64d9e2c748cf095460a136c4877c1316664736f6c634300080a0033";

    public static final String FUNC_CREATEPLACE = "createPlace";

    public static final String FUNC_DELETEPLACE = "deletePlace";

    public static final String FUNC_GETALLPLACELIST = "getAllPlaceList";

    public static final String FUNC_GETBYID = "getById";

    public static final String FUNC_GETLISTBYPLACEMANAGERACCOUNT = "getListByPlaceManagerAccount";

    public static final String FUNC_GETPLACEINFO = "getPlaceInfo";

    public static final String FUNC_GETPLACENAMEBYPLACEID = "getPlaceNameByPlaceId";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_PLACEINSERTED = "placeInserted";

    public static final String FUNC_PLACEKEY = "placeKey";

    public static final String FUNC_PLACES = "places";

    public static final String FUNC_REMOVEPLACEKEYATINDEX = "removePlaceKeyAtIndex";

    public static final String FUNC_UPDATE = "update";

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> createPlace(Place _place) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEPLACE,
                Arrays.<Type>asList(_place),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deletePlace(String _userContract, String _placeAssetContract, String _account, String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETEPLACE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userContract),
                        new org.web3j.abi.datatypes.Address(160, _placeAssetContract),
                        new org.web3j.abi.datatypes.Utf8String(_account),
                        new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAllPlaceList() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALLPLACELIST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Place>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Place> getById(String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBYID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<List> getListByPlaceManagerAccount(String _placeManagerAccount) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTBYPLACEMANAGERACCOUNT,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeManagerAccount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Place>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Place> getPlaceInfo() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLACEINFO,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<String> getPlaceNameByPlaceId(String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLACENAMEBYPLACEID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> placeInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> placeKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>> places(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> removePlaceKeyAtIndex(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLACEKEYATINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> update(Place _place) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATE,
                Arrays.<Type>asList(_place),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
    @Getter
    @Setter
    @ToString
    public static class Place extends DynamicStruct {
        public String placeId;

        public String placeName;

        public String placeAddress;

        public String placeManagerAccount;

        public BigInteger status;

        public Place(String placeId, String placeName, String placeAddress, String placeManagerAccount, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(placeName),new org.web3j.abi.datatypes.Utf8String(placeAddress),new org.web3j.abi.datatypes.Utf8String(placeManagerAccount),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.placeId = placeId;
            this.placeName = placeName;
            this.placeAddress = placeAddress;
            this.placeManagerAccount = placeManagerAccount;
            this.status = status;
        }

        public Place(Utf8String placeId, Utf8String placeName, Utf8String placeAddress, Utf8String placeManagerAccount, Uint256 status) {
            super(placeId,placeName,placeAddress,placeManagerAccount,status);
            this.placeId = placeId.getValue();
            this.placeName = placeName.getValue();
            this.placeAddress = placeAddress.getValue();
            this.placeManagerAccount = placeManagerAccount.getValue();
            this.status = status.getValue();
        }
    }

    @Getter
    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public BigInteger code;
    }
}
