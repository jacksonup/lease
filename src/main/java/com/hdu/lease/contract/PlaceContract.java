package com.hdu.lease.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class PlaceContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b5061233f806100296000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806389ec5b061161007157806389ec5b061461017e578063954aae641461019a5780639e4c78f4146101b8578063aab01b18146101e8578063f229561514610204578063f3bfddb714610220576100a9565b80631f7b6d32146100ae57806327ede887146100cc578063465c4105146100fc5780634bba74d11461012c57806374386a841461014a575b600080fd5b6100b6610250565b6040516100c39190611594565b60405180910390f35b6100e660048036038101906100e191906115ef565b610256565b6040516100f391906116b5565b60405180910390f35b6101166004803603810190610111919061180c565b610302565b604051610123919061189f565b60405180910390f35b6101346103df565b6040516101419190611a60565b60405180910390f35b610164600480360381019061015f9190611a82565b610780565b604051610175959493929190611acb565b60405180910390f35b610198600480360381019061019391906115ef565b6109ec565b005b6101a2610aa6565b6040516101af9190611bc5565b60405180910390f35b6101d260048036038101906101cd9190611a82565b610d2c565b6040516101df919061189f565b60405180910390f35b61020260048036038101906101fd9190611c45565b610d62565b005b61021e60048036038101906102199190611dea565b610fed565b005b61023a60048036038101906102359190611a82565b61115b565b6040516102479190611bc5565b60405180910390f35b60035481565b6002818154811061026657600080fd5b90600052602060002001600091509050805461028190611e62565b80601f01602080910402602001604051908101604052809291908181526020018280546102ad90611e62565b80156102fa5780601f106102cf576101008083540402835291602001916102fa565b820191906000526020600020905b8154815290600101906020018083116102dd57829003601f168201915b505050505081565b60008083905060008390508051825114610321576000925050506103d9565b60005b82518110156103d1578181815181106103405761033f611e94565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106103805761037f611e94565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103be57600093505050506103d9565b80806103c990611ef2565b915050610324565b506001925050505b92915050565b6060600060035467ffffffffffffffff8111156103ff576103fe6116e1565b5b60405190808252806020026020018201604052801561043857816020015b61042561141c565b81526020019060019003908161041d5790505b5090506000805b6003548110156107775760016002828154811061045f5761045e611e94565b5b906000526020600020016040516104769190611fda565b908152602001604051809103902060009054906101000a900460ff161561075e576000600282815481106104ad576104ac611e94565b5b906000526020600020016040516104c49190611fda565b90815260200160405180910390206040518060a00160405290816000820180546104ed90611e62565b80601f016020809104026020016040519081016040528092919081815260200182805461051990611e62565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050815260200160018201805461057f90611e62565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab90611e62565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050815260200160028201805461061190611e62565b80601f016020809104026020016040519081016040528092919081815260200182805461063d90611e62565b801561068a5780601f1061065f5761010080835404028352916020019161068a565b820191906000526020600020905b81548152906001019060200180831161066d57829003601f168201915b505050505081526020016003820180546106a390611e62565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90611e62565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b5050505050815260200160048201548152505083838061073b90611ef2565b94508151811061074e5761074d611e94565b5b6020026020010181905250610763565b610764565b5b808061076f90611ef2565b91505061043f565b50819250505090565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546107b990611e62565b80601f01602080910402602001604051908101604052809291908181526020018280546107e590611e62565b80156108325780601f1061080757610100808354040283529160200191610832565b820191906000526020600020905b81548152906001019060200180831161081557829003601f168201915b50505050509080600101805461084790611e62565b80601f016020809104026020016040519081016040528092919081815260200182805461087390611e62565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b5050505050908060020180546108d590611e62565b80601f016020809104026020016040519081016040528092919081815260200182805461090190611e62565b801561094e5780601f106109235761010080835404028352916020019161094e565b820191906000526020600020905b81548152906001019060200180831161093157829003601f168201915b50505050509080600301805461096390611e62565b80601f016020809104026020016040519081016040528092919081815260200182805461098f90611e62565b80156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b5050505050908060040154905085565b60035481106109fa57610aa3565b60008190505b6001600354610a0f9190611ff1565b811015610a89576002600182610a259190612025565b81548110610a3657610a35611e94565b5b9060005260206000200160028281548110610a5457610a53611e94565b5b90600052602060002001908054610a6a90611e62565b610a7592919061144b565b508080610a8190611ef2565b915050610a00565b5060036000815480929190610a9d9061207b565b91905055505b50565b610aae61141c565b6000604051610abc906120f1565b90815260200160405180910390206040518060a0016040529081600082018054610ae590611e62565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1190611e62565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b50505050508152602001600182018054610b7790611e62565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba390611e62565b8015610bf05780601f10610bc557610100808354040283529160200191610bf0565b820191906000526020600020905b815481529060010190602001808311610bd357829003601f168201915b50505050508152602001600282018054610c0990611e62565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3590611e62565b8015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b50505050508152602001600382018054610c9b90611e62565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc790611e62565b8015610d145780601f10610ce957610100808354040283529160200191610d14565b820191906000526020600020905b815481529060010190602001808311610cf757829003601f168201915b50505050508152602001600482015481525050905090565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b8373ffffffffffffffffffffffffffffffffffffffff166367f58d19836040518263ffffffff1660e01b8152600401610d9b91906116b5565b602060405180830381865afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc9190612132565b15610fa8578273ffffffffffffffffffffffffffffffffffffffff16637ce7f1b7826040518263ffffffff1660e01b8152600401610e1a91906116b5565b602060405180830381865afa158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b9190612132565b15610e9e577f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e432447366320612712604051610e9191906121a4565b60405180910390a1610fe7565b600181604051610eae91906121f0565b908152602001604051809103902060009054906101000a900460ff1615610f6a576001600082604051610ee191906121f0565b9081526020016040518091039020600401819055506000600182604051610f0891906121f0565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e43244736632060c8604051610f5d9190612242565b60405180910390a1610fe7565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e432447366320612713604051610f9b9190612298565b60405180910390a1610fe6565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e432447366320612711604051610fd991906122ee565b60405180910390a1610fe7565b5b50505050565b6001816000015160405161100191906121f0565b908152602001604051809103902060009054906101000a900460ff1661115857806000826000015160405161103691906121f0565b908152602001604051809103902060008201518160000190805190602001906110609291906114d8565b50602082015181600101908051906020019061107d9291906114d8565b50604082015181600201908051906020019061109a9291906114d8565b5060608201518160030190805190602001906110b79291906114d8565b506080820151816004015590505060018082600001516040516110da91906121f0565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506002816000015190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061113e9291906114d8565b506003600081548092919061115290611ef2565b91905055505b50565b61116361141c565b60018260405161117391906121f0565b908152602001604051809103902060009054906101000a900460ff1615611416576000826040516111a491906121f0565b90815260200160405180910390206040518060a00160405290816000820180546111cd90611e62565b80601f01602080910402602001604051908101604052809291908181526020018280546111f990611e62565b80156112465780601f1061121b57610100808354040283529160200191611246565b820191906000526020600020905b81548152906001019060200180831161122957829003601f168201915b5050505050815260200160018201805461125f90611e62565b80601f016020809104026020016040519081016040528092919081815260200182805461128b90611e62565b80156112d85780601f106112ad576101008083540402835291602001916112d8565b820191906000526020600020905b8154815290600101906020018083116112bb57829003601f168201915b505050505081526020016002820180546112f190611e62565b80601f016020809104026020016040519081016040528092919081815260200182805461131d90611e62565b801561136a5780601f1061133f5761010080835404028352916020019161136a565b820191906000526020600020905b81548152906001019060200180831161134d57829003601f168201915b5050505050815260200160038201805461138390611e62565b80601f01602080910402602001604051908101604052809291908181526020018280546113af90611e62565b80156113fc5780601f106113d1576101008083540402835291602001916113fc565b820191906000526020600020905b8154815290600101906020018083116113df57829003601f168201915b505050505081526020016004820154815250509050611417565b5b919050565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001600081525090565b82805461145790611e62565b90600052602060002090601f01602090048101928261147957600085556114c7565b82601f1061148a57805485556114c7565b828001600101855582156114c757600052602060002091601f016020900482015b828111156114c65782548255916001019190600101906114ab565b5b5090506114d4919061155e565b5090565b8280546114e490611e62565b90600052602060002090601f016020900481019282611506576000855561154d565b82601f1061151f57805160ff191683800117855561154d565b8280016001018555821561154d579182015b8281111561154c578251825591602001919060010190611531565b5b50905061155a919061155e565b5090565b5b8082111561157757600081600090555060010161155f565b5090565b6000819050919050565b61158e8161157b565b82525050565b60006020820190506115a96000830184611585565b92915050565b6000604051905090565b600080fd5b600080fd5b6115cc8161157b565b81146115d757600080fd5b50565b6000813590506115e9816115c3565b92915050565b600060208284031215611605576116046115b9565b5b6000611613848285016115da565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561165657808201518184015260208101905061163b565b83811115611665576000848401525b50505050565b6000601f19601f8301169050919050565b60006116878261161c565b6116918185611627565b93506116a1818560208601611638565b6116aa8161166b565b840191505092915050565b600060208201905081810360008301526116cf818461167c565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117198261166b565b810181811067ffffffffffffffff82111715611738576117376116e1565b5b80604052505050565b600061174b6115af565b90506117578282611710565b919050565b600067ffffffffffffffff821115611777576117766116e1565b5b6117808261166b565b9050602081019050919050565b82818337600083830152505050565b60006117af6117aa8461175c565b611741565b9050828152602081018484840111156117cb576117ca6116dc565b5b6117d684828561178d565b509392505050565b600082601f8301126117f3576117f26116d7565b5b813561180384826020860161179c565b91505092915050565b60008060408385031215611823576118226115b9565b5b600083013567ffffffffffffffff811115611841576118406115be565b5b61184d858286016117de565b925050602083013567ffffffffffffffff81111561186e5761186d6115be565b5b61187a858286016117de565b9150509250929050565b60008115159050919050565b61189981611884565b82525050565b60006020820190506118b46000830184611890565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006119028261161c565b61190c81856118e6565b935061191c818560208601611638565b6119258161166b565b840191505092915050565b6119398161157b565b82525050565b600060a083016000830151848203600086015261195c82826118f7565b9150506020830151848203602086015261197682826118f7565b9150506040830151848203604086015261199082826118f7565b915050606083015184820360608601526119aa82826118f7565b91505060808301516119bf6080860182611930565b508091505092915050565b60006119d6838361193f565b905092915050565b6000602082019050919050565b60006119f6826118ba565b611a0081856118c5565b935083602082028501611a12856118d6565b8060005b85811015611a4e5784840389528151611a2f85826119ca565b9450611a3a836119de565b925060208a01995050600181019050611a16565b50829750879550505050505092915050565b60006020820190508181036000830152611a7a81846119eb565b905092915050565b600060208284031215611a9857611a976115b9565b5b600082013567ffffffffffffffff811115611ab657611ab56115be565b5b611ac2848285016117de565b91505092915050565b600060a0820190508181036000830152611ae5818861167c565b90508181036020830152611af9818761167c565b90508181036040830152611b0d818661167c565b90508181036060830152611b21818561167c565b9050611b306080830184611585565b9695505050505050565b600060a0830160008301518482036000860152611b5782826118f7565b91505060208301518482036020860152611b7182826118f7565b91505060408301518482036040860152611b8b82826118f7565b91505060608301518482036060860152611ba582826118f7565b9150506080830151611bba6080860182611930565b508091505092915050565b60006020820190508181036000830152611bdf8184611b3a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c1282611be7565b9050919050565b611c2281611c07565b8114611c2d57600080fd5b50565b600081359050611c3f81611c19565b92915050565b60008060008060808587031215611c5f57611c5e6115b9565b5b6000611c6d87828801611c30565b9450506020611c7e87828801611c30565b935050604085013567ffffffffffffffff811115611c9f57611c9e6115be565b5b611cab878288016117de565b925050606085013567ffffffffffffffff811115611ccc57611ccb6115be565b5b611cd8878288016117de565b91505092959194509250565b600080fd5b600080fd5b600060a08284031215611d0457611d03611ce4565b5b611d0e60a0611741565b9050600082013567ffffffffffffffff811115611d2e57611d2d611ce9565b5b611d3a848285016117de565b600083015250602082013567ffffffffffffffff811115611d5e57611d5d611ce9565b5b611d6a848285016117de565b602083015250604082013567ffffffffffffffff811115611d8e57611d8d611ce9565b5b611d9a848285016117de565b604083015250606082013567ffffffffffffffff811115611dbe57611dbd611ce9565b5b611dca848285016117de565b6060830152506080611dde848285016115da565b60808301525092915050565b600060208284031215611e0057611dff6115b9565b5b600082013567ffffffffffffffff811115611e1e57611e1d6115be565b5b611e2a84828501611cee565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e7a57607f821691505b60208210811415611e8e57611e8d611e33565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611efd8261157b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f3057611f2f611ec3565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611f6881611e62565b611f728186611f3b565b94506001821660008114611f8d5760018114611f9e57611fd1565b60ff19831686528186019350611fd1565b611fa785611f46565b60005b83811015611fc957815481890152600182019150602081019050611faa565b838801955050505b50505092915050565b6000611fe68284611f5b565b915081905092915050565b6000611ffc8261157b565b91506120078361157b565b92508282101561201a57612019611ec3565b5b828203905092915050565b60006120308261157b565b915061203b8361157b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120705761206f611ec3565b5b828201905092915050565b60006120868261157b565b9150600082141561209a57612099611ec3565b5b600182039050919050565b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b60006120db600183611f3b565b91506120e6826120a5565b600182019050919050565b60006120fc826120ce565b9150819050919050565b61210f81611884565b811461211a57600080fd5b50565b60008151905061212c81612106565b92915050565b600060208284031215612148576121476115b9565b5b60006121568482850161211d565b91505092915050565b6000819050919050565b6000819050919050565b600061218e6121896121848461215f565b612169565b61157b565b9050919050565b61219e81612173565b82525050565b60006020820190506121b96000830184612195565b92915050565b60006121ca8261161c565b6121d48185611f3b565b93506121e4818560208601611638565b80840191505092915050565b60006121fc82846121bf565b915081905092915050565b6000819050919050565b600061222c61222761222284612207565b612169565b61157b565b9050919050565b61223c81612211565b82525050565b60006020820190506122576000830184612233565b92915050565b6000819050919050565b600061228261227d6122788461225d565b612169565b61157b565b9050919050565b61229281612267565b82525050565b60006020820190506122ad6000830184612289565b92915050565b6000819050919050565b60006122d86122d36122ce846122b3565b612169565b61157b565b9050919050565b6122e8816122bd565b82525050565b600060208201905061230360008301846122df565b9291505056fea26469706673582212203646008ab6d484236cd552e4a53ebdc4f37466dcd81cc5ee33ae7449c0a6766464736f6c634300080a0033";

    public static final String FUNC_CREATEPLACE = "createPlace";

    public static final String FUNC_DELETEPLACE = "deletePlace";

    public static final String FUNC_GETALLPLACELIST = "getAllPlaceList";

    public static final String FUNC_GETBYID = "getById";

    public static final String FUNC_GETPLACEINFO = "getPlaceInfo";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_LENGTH = "length";

    public static final String FUNC_PLACEINSERTED = "placeInserted";

    public static final String FUNC_PLACEKEY = "placeKey";

    public static final String FUNC_PLACES = "places";

    public static final String FUNC_REMOVEPLACEKEYATINDEX = "removePlaceKeyAtIndex";

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> createPlace(Place _place) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEPLACE,
                Arrays.<Type>asList(_place),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deletePlace(String _userContract, String _placeAssetContract, String _account, String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETEPLACE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userContract),
                        new org.web3j.abi.datatypes.Address(160, _placeAssetContract),
                        new org.web3j.abi.datatypes.Utf8String(_account),
                        new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAllPlaceList() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALLPLACELIST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Place>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Place> getById(String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBYID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<Place> getPlaceInfo() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLACEINFO,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> length() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_LENGTH,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> placeInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> placeKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>> places(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> removePlaceKeyAtIndex(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLACEKEYATINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
    @Getter
    @Setter
    @ToString
    public static class Place extends DynamicStruct {
        public String placeId;

        public String placeName;

        public String placeAddress;

        public String placeManagerAccount;

        public BigInteger status;

        public Place(String placeId, String placeName, String placeAddress, String placeManagerAccount, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(placeName),new org.web3j.abi.datatypes.Utf8String(placeAddress),new org.web3j.abi.datatypes.Utf8String(placeManagerAccount),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.placeId = placeId;
            this.placeName = placeName;
            this.placeAddress = placeAddress;
            this.placeManagerAccount = placeManagerAccount;
            this.status = status;
        }

        public Place(Utf8String placeId, Utf8String placeName, Utf8String placeAddress, Utf8String placeManagerAccount, Uint256 status) {
            super(placeId,placeName,placeAddress,placeManagerAccount,status);
            this.placeId = placeId.getValue();
            this.placeName = placeName.getValue();
            this.placeAddress = placeAddress.getValue();
            this.placeManagerAccount = placeManagerAccount.getValue();
            this.status = status.getValue();
        }
    }

    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public BigInteger code;
    }
}
