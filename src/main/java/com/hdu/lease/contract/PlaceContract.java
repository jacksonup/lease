package com.hdu.lease.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class PlaceContract extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50612651806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806389ec5b061161007157806389ec5b0614610190578063954aae64146101ac5780639e4c78f4146101ca578063aab01b18146101fa578063f229561514610216578063f3bfddb714610232576100a9565b806327ede887146100ae578063465c4105146100de5780634bba74d11461010e578063610ed5db1461012c57806374386a841461015c575b600080fd5b6100c860048036038101906100c391906118ed565b610262565b6040516100d591906119b3565b60405180910390f35b6100f860048036038101906100f39190611b0a565b61030e565b6040516101059190611b9d565b60405180910390f35b6101166103eb565b6040516101239190611d5e565b60405180910390f35b61014660048036038101906101419190611d80565b61088f565b60405161015391906119b3565b60405180910390f35b61017660048036038101906101719190611d80565b610979565b604051610187959493929190611dd8565b60405180910390f35b6101aa60048036038101906101a591906118ed565b610be5565b005b6101b4610cbf565b6040516101c19190611ed2565b60405180910390f35b6101e460048036038101906101df9190611d80565b610f45565b6040516101f19190611b9d565b60405180910390f35b610214600480360381019061020f9190611f52565b610f7b565b005b610230600480360381019061022b91906120f7565b6112ed565b005b61024c60048036038101906102479190611d80565b611443565b6040516102599190611ed2565b60405180910390f35b6002818154811061027257600080fd5b90600052602060002001600091509050805461028d9061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b99061216f565b80156103065780601f106102db57610100808354040283529160200191610306565b820191906000526020600020905b8154815290600101906020018083116102e957829003601f168201915b505050505081565b6000808390506000839050805182511461032d576000925050506103e5565b60005b82518110156103dd5781818151811061034c5761034b6121a1565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683828151811061038c5761038b6121a1565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103ca57600093505050506103e5565b80806103d5906121ff565b915050610330565b506001925050505b92915050565b60606000600280549050905060008167ffffffffffffffff811115610413576104126119df565b5b60405190808252806020026020018201604052801561044c57816020015b610439611704565b8152602001906001900390816104315790505b5090506000805b838110156107d457600160028281548110610471576104706121a1565b5b9060005260206000200160405161048891906122e7565b908152602001604051809103902060009054906101000a900460ff1680156104ef575060016000600283815481106104c3576104c26121a1565b5b906000526020600020016040516104da91906122e7565b90815260200160405180910390206004015414155b156107bb5760006002828154811061050a576105096121a1565b5b9060005260206000200160405161052191906122e7565b90815260200160405180910390206040518060a001604052908160008201805461054a9061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546105769061216f565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081526020016001820180546105dc9061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546106089061216f565b80156106555780601f1061062a57610100808354040283529160200191610655565b820191906000526020600020905b81548152906001019060200180831161063857829003601f168201915b5050505050815260200160028201805461066e9061216f565b80601f016020809104026020016040519081016040528092919081815260200182805461069a9061216f565b80156106e75780601f106106bc576101008083540402835291602001916106e7565b820191906000526020600020905b8154815290600101906020018083116106ca57829003601f168201915b505050505081526020016003820180546107009061216f565b80601f016020809104026020016040519081016040528092919081815260200182805461072c9061216f565b80156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b50505050508152602001600482015481525050838380610798906121ff565b9450815181106107ab576107aa6121a1565b5b60200260200101819052506107c0565b6107c1565b5b80806107cc906121ff565b915050610453565b5060008167ffffffffffffffff8111156107f1576107f06119df565b5b60405190808252806020026020018201604052801561082a57816020015b610817611704565b81526020019060019003908161080f5790505b50905060005b828110156108845783818151811061084b5761084a6121a1565b5b6020026020010151828281518110610866576108656121a1565b5b6020026020010181905250808061087c906121ff565b915050610830565b508094505050505090565b60606001826040516108a1919061232f565b908152602001604051809103902060009054906101000a900460ff1615610973576000826040516108d2919061232f565b908152602001604051809103902060010180546108ee9061216f565b80601f016020809104026020016040519081016040528092919081815260200182805461091a9061216f565b80156109675780601f1061093c57610100808354040283529160200191610967565b820191906000526020600020905b81548152906001019060200180831161094a57829003601f168201915b50505050509050610974565b5b919050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546109b29061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546109de9061216f565b8015610a2b5780601f10610a0057610100808354040283529160200191610a2b565b820191906000526020600020905b815481529060010190602001808311610a0e57829003601f168201915b505050505090806001018054610a409061216f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6c9061216f565b8015610ab95780601f10610a8e57610100808354040283529160200191610ab9565b820191906000526020600020905b815481529060010190602001808311610a9c57829003601f168201915b505050505090806002018054610ace9061216f565b80601f0160208091040260200160405190810160405280929190818152602001828054610afa9061216f565b8015610b475780601f10610b1c57610100808354040283529160200191610b47565b820191906000526020600020905b815481529060010190602001808311610b2a57829003601f168201915b505050505090806003018054610b5c9061216f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b889061216f565b8015610bd55780601f10610baa57610100808354040283529160200191610bd5565b820191906000526020600020905b815481529060010190602001808311610bb857829003601f168201915b5050505050908060040154905085565b60006002805490509050808210610bfc5750610cbc565b60008290505b600182610c0f9190612346565b811015610c89576002600182610c25919061237a565b81548110610c3657610c356121a1565b5b9060005260206000200160028281548110610c5457610c536121a1565b5b90600052602060002001908054610c6a9061216f565b610c75929190611733565b508080610c81906121ff565b915050610c02565b506002805480610c9c57610c9b6123d0565b5b600190038181906000526020600020016000610cb891906117c0565b9055505b50565b610cc7611704565b6000604051610cd59061244b565b90815260200160405180910390206040518060a0016040529081600082018054610cfe9061216f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2a9061216f565b8015610d775780601f10610d4c57610100808354040283529160200191610d77565b820191906000526020600020905b815481529060010190602001808311610d5a57829003601f168201915b50505050508152602001600182018054610d909061216f565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbc9061216f565b8015610e095780601f10610dde57610100808354040283529160200191610e09565b820191906000526020600020905b815481529060010190602001808311610dec57829003601f168201915b50505050508152602001600282018054610e229061216f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4e9061216f565b8015610e9b5780601f10610e7057610100808354040283529160200191610e9b565b820191906000526020600020905b815481529060010190602001808311610e7e57829003601f168201915b50505050508152602001600382018054610eb49061216f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee09061216f565b8015610f2d5780601f10610f0257610100808354040283529160200191610f2d565b820191906000526020600020905b815481529060010190602001808311610f1057829003601f168201915b50505050508152602001600482015481525050905090565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b8373ffffffffffffffffffffffffffffffffffffffff166367f58d19836040518263ffffffff1660e01b8152600401610fb491906119b3565b602060405180830381865afa158015610fd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff5919061248c565b156112a8578273ffffffffffffffffffffffffffffffffffffffff16637ce7f1b7826040518263ffffffff1660e01b815260040161103391906119b3565b602060405180830381865afa158015611050573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611074919061248c565b156110b7577f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e4324473663206127126040516110aa91906124fe565b60405180910390a16112e7565b6001816040516110c7919061232f565b908152602001604051809103902060009054906101000a900460ff161561126a5760016000826040516110fa919061232f565b9081526020016040518091039020600401819055506000600182604051611121919061232f565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060005b600280549050811015611223576112066002828154811061116d5761116c6121a1565b5b9060005260206000200180546111829061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546111ae9061216f565b80156111fb5780601f106111d0576101008083540402835291602001916111fb565b820191906000526020600020905b8154815290600101906020018083116111de57829003601f168201915b50505050508361030e565b1561121057611223565b808061121b906121ff565b915050611149565b61122c81610be5565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e43244736632060c860405161125c9190612554565b60405180910390a1506112e7565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e43244736632061271360405161129b91906125aa565b60405180910390a16112e6565b7f336e99f32272d4426ebd480dfe71e2f6e58927962f100ca4569e4324473663206127116040516112d99190612600565b60405180910390a16112e7565b5b50505050565b60018160000151604051611301919061232f565b908152602001604051809103902060009054906101000a900460ff16611440578060008260000151604051611336919061232f565b90815260200160405180910390206000820151816000019080519060200190611360929190611800565b50602082015181600101908051906020019061137d929190611800565b50604082015181600201908051906020019061139a929190611800565b5060608201518160030190805190602001906113b7929190611800565b506080820151816004015590505060018082600001516040516113da919061232f565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506002816000015190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061143e929190611800565b505b50565b61144b611704565b60018260405161145b919061232f565b908152602001604051809103902060009054906101000a900460ff16156116fe5760008260405161148c919061232f565b90815260200160405180910390206040518060a00160405290816000820180546114b59061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546114e19061216f565b801561152e5780601f106115035761010080835404028352916020019161152e565b820191906000526020600020905b81548152906001019060200180831161151157829003601f168201915b505050505081526020016001820180546115479061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546115739061216f565b80156115c05780601f10611595576101008083540402835291602001916115c0565b820191906000526020600020905b8154815290600101906020018083116115a357829003601f168201915b505050505081526020016002820180546115d99061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546116059061216f565b80156116525780601f1061162757610100808354040283529160200191611652565b820191906000526020600020905b81548152906001019060200180831161163557829003601f168201915b5050505050815260200160038201805461166b9061216f565b80601f01602080910402602001604051908101604052809291908181526020018280546116979061216f565b80156116e45780601f106116b9576101008083540402835291602001916116e4565b820191906000526020600020905b8154815290600101906020018083116116c757829003601f168201915b5050505050815260200160048201548152505090506116ff565b5b919050565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001600081525090565b82805461173f9061216f565b90600052602060002090601f01602090048101928261176157600085556117af565b82601f1061177257805485556117af565b828001600101855582156117af57600052602060002091601f016020900482015b828111156117ae578254825591600101919060010190611793565b5b5090506117bc9190611886565b5090565b5080546117cc9061216f565b6000825580601f106117de57506117fd565b601f0160209004906000526020600020908101906117fc9190611886565b5b50565b82805461180c9061216f565b90600052602060002090601f01602090048101928261182e5760008555611875565b82601f1061184757805160ff1916838001178555611875565b82800160010185558215611875579182015b82811115611874578251825591602001919060010190611859565b5b5090506118829190611886565b5090565b5b8082111561189f576000816000905550600101611887565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6118ca816118b7565b81146118d557600080fd5b50565b6000813590506118e7816118c1565b92915050565b600060208284031215611903576119026118ad565b5b6000611911848285016118d8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611954578082015181840152602081019050611939565b83811115611963576000848401525b50505050565b6000601f19601f8301169050919050565b60006119858261191a565b61198f8185611925565b935061199f818560208601611936565b6119a881611969565b840191505092915050565b600060208201905081810360008301526119cd818461197a565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a1782611969565b810181811067ffffffffffffffff82111715611a3657611a356119df565b5b80604052505050565b6000611a496118a3565b9050611a558282611a0e565b919050565b600067ffffffffffffffff821115611a7557611a746119df565b5b611a7e82611969565b9050602081019050919050565b82818337600083830152505050565b6000611aad611aa884611a5a565b611a3f565b905082815260208101848484011115611ac957611ac86119da565b5b611ad4848285611a8b565b509392505050565b600082601f830112611af157611af06119d5565b5b8135611b01848260208601611a9a565b91505092915050565b60008060408385031215611b2157611b206118ad565b5b600083013567ffffffffffffffff811115611b3f57611b3e6118b2565b5b611b4b85828601611adc565b925050602083013567ffffffffffffffff811115611b6c57611b6b6118b2565b5b611b7885828601611adc565b9150509250929050565b60008115159050919050565b611b9781611b82565b82525050565b6000602082019050611bb26000830184611b8e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000611c008261191a565b611c0a8185611be4565b9350611c1a818560208601611936565b611c2381611969565b840191505092915050565b611c37816118b7565b82525050565b600060a0830160008301518482036000860152611c5a8282611bf5565b91505060208301518482036020860152611c748282611bf5565b91505060408301518482036040860152611c8e8282611bf5565b91505060608301518482036060860152611ca88282611bf5565b9150506080830151611cbd6080860182611c2e565b508091505092915050565b6000611cd48383611c3d565b905092915050565b6000602082019050919050565b6000611cf482611bb8565b611cfe8185611bc3565b935083602082028501611d1085611bd4565b8060005b85811015611d4c5784840389528151611d2d8582611cc8565b9450611d3883611cdc565b925060208a01995050600181019050611d14565b50829750879550505050505092915050565b60006020820190508181036000830152611d788184611ce9565b905092915050565b600060208284031215611d9657611d956118ad565b5b600082013567ffffffffffffffff811115611db457611db36118b2565b5b611dc084828501611adc565b91505092915050565b611dd2816118b7565b82525050565b600060a0820190508181036000830152611df2818861197a565b90508181036020830152611e06818761197a565b90508181036040830152611e1a818661197a565b90508181036060830152611e2e818561197a565b9050611e3d6080830184611dc9565b9695505050505050565b600060a0830160008301518482036000860152611e648282611bf5565b91505060208301518482036020860152611e7e8282611bf5565b91505060408301518482036040860152611e988282611bf5565b91505060608301518482036060860152611eb28282611bf5565b9150506080830151611ec76080860182611c2e565b508091505092915050565b60006020820190508181036000830152611eec8184611e47565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f1f82611ef4565b9050919050565b611f2f81611f14565b8114611f3a57600080fd5b50565b600081359050611f4c81611f26565b92915050565b60008060008060808587031215611f6c57611f6b6118ad565b5b6000611f7a87828801611f3d565b9450506020611f8b87828801611f3d565b935050604085013567ffffffffffffffff811115611fac57611fab6118b2565b5b611fb887828801611adc565b925050606085013567ffffffffffffffff811115611fd957611fd86118b2565b5b611fe587828801611adc565b91505092959194509250565b600080fd5b600080fd5b600060a0828403121561201157612010611ff1565b5b61201b60a0611a3f565b9050600082013567ffffffffffffffff81111561203b5761203a611ff6565b5b61204784828501611adc565b600083015250602082013567ffffffffffffffff81111561206b5761206a611ff6565b5b61207784828501611adc565b602083015250604082013567ffffffffffffffff81111561209b5761209a611ff6565b5b6120a784828501611adc565b604083015250606082013567ffffffffffffffff8111156120cb576120ca611ff6565b5b6120d784828501611adc565b60608301525060806120eb848285016118d8565b60808301525092915050565b60006020828403121561210d5761210c6118ad565b5b600082013567ffffffffffffffff81111561212b5761212a6118b2565b5b61213784828501611ffb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061218757607f821691505b6020821081141561219b5761219a612140565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220a826118b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561223d5761223c6121d0565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546122758161216f565b61227f8186612248565b9450600182166000811461229a57600181146122ab576122de565b60ff198316865281860193506122de565b6122b485612253565b60005b838110156122d6578154818901526001820191506020810190506122b7565b838801955050505b50505092915050565b60006122f38284612268565b915081905092915050565b60006123098261191a565b6123138185612248565b9350612323818560208601611936565b80840191505092915050565b600061233b82846122fe565b915081905092915050565b6000612351826118b7565b915061235c836118b7565b92508282101561236f5761236e6121d0565b5b828203905092915050565b6000612385826118b7565b9150612390836118b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123c5576123c46121d0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b6000612435600183612248565b9150612440826123ff565b600182019050919050565b600061245682612428565b9150819050919050565b61246981611b82565b811461247457600080fd5b50565b60008151905061248681612460565b92915050565b6000602082840312156124a2576124a16118ad565b5b60006124b084828501612477565b91505092915050565b6000819050919050565b6000819050919050565b60006124e86124e36124de846124b9565b6124c3565b6118b7565b9050919050565b6124f8816124cd565b82525050565b600060208201905061251360008301846124ef565b92915050565b6000819050919050565b600061253e61253961253484612519565b6124c3565b6118b7565b9050919050565b61254e81612523565b82525050565b60006020820190506125696000830184612545565b92915050565b6000819050919050565b600061259461258f61258a8461256f565b6124c3565b6118b7565b9050919050565b6125a481612579565b82525050565b60006020820190506125bf600083018461259b565b92915050565b6000819050919050565b60006125ea6125e56125e0846125c5565b6124c3565b6118b7565b9050919050565b6125fa816125cf565b82525050565b600060208201905061261560008301846125f1565b9291505056fea26469706673582212207a86090970a7b7833225da990bf5e5b1cd5e045d1f8cec44322ff4d1f5c8465264736f6c634300080a0033";

    public static final String FUNC_CREATEPLACE = "createPlace";

    public static final String FUNC_DELETEPLACE = "deletePlace";

    public static final String FUNC_GETALLPLACELIST = "getAllPlaceList";

    public static final String FUNC_GETBYID = "getById";

    public static final String FUNC_GETPLACEINFO = "getPlaceInfo";

    public static final String FUNC_GETPLACENAMEBYPLACEID = "getPlaceNameByPlaceId";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_PLACEINSERTED = "placeInserted";

    public static final String FUNC_PLACEKEY = "placeKey";

    public static final String FUNC_PLACES = "places";

    public static final String FUNC_REMOVEPLACEKEYATINDEX = "removePlaceKeyAtIndex";

    public static final Event DELETEMSG_EVENT = new Event("DeleteMsg",
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PlaceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<DeleteMsgEventResponse> getDeleteMsgEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DELETEMSG_EVENT, transactionReceipt);
        ArrayList<DeleteMsgEventResponse> responses = new ArrayList<DeleteMsgEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DeleteMsgEventResponse>() {
            @Override
            public DeleteMsgEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DELETEMSG_EVENT, log);
                DeleteMsgEventResponse typedResponse = new DeleteMsgEventResponse();
                typedResponse.log = log;
                typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DeleteMsgEventResponse> deleteMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELETEMSG_EVENT));
        return deleteMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> createPlace(Place _place) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEPLACE,
                Arrays.<Type>asList(_place),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deletePlace(String _userContract, String _placeAssetContract, String _account, String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETEPLACE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userContract),
                        new org.web3j.abi.datatypes.Address(160, _placeAssetContract),
                        new org.web3j.abi.datatypes.Utf8String(_account),
                        new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAllPlaceList() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETALLPLACELIST,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Place>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Place> getById(String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBYID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<Place> getPlaceInfo() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLACEINFO,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Place>() {}));
        return executeRemoteCallSingleValueReturn(function, Place.class);
    }

    public RemoteFunctionCall<String> getPlaceNameByPlaceId(String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLACENAMEBYPLACEID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> placeInserted(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> placeKey(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACEKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>> places(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PLACES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, String, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> removePlaceKeyAtIndex(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLACEKEYATINDEX,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PlaceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PlaceContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
    @Getter
    @Setter
    @ToString
    public static class Place extends DynamicStruct {
        public String placeId;

        public String placeName;

        public String placeAddress;

        public String placeManagerAccount;

        public BigInteger status;

        public Place(String placeId, String placeName, String placeAddress, String placeManagerAccount, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(placeName),new org.web3j.abi.datatypes.Utf8String(placeAddress),new org.web3j.abi.datatypes.Utf8String(placeManagerAccount),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.placeId = placeId;
            this.placeName = placeName;
            this.placeAddress = placeAddress;
            this.placeManagerAccount = placeManagerAccount;
            this.status = status;
        }

        public Place(Utf8String placeId, Utf8String placeName, Utf8String placeAddress, Utf8String placeManagerAccount, Uint256 status) {
            super(placeId,placeName,placeAddress,placeManagerAccount,status);
            this.placeId = placeId.getValue();
            this.placeName = placeName.getValue();
            this.placeAddress = placeAddress.getValue();
            this.placeManagerAccount = placeManagerAccount.getValue();
            this.status = status.getValue();
        }
    }

    @Getter
    public static class DeleteMsgEventResponse extends BaseEventResponse {
        public BigInteger code;
    }
}
