package com.hdu.lease.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple8;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class AssetDetailContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b50614255806100296000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063465c410511610071578063465c410514610193578063487daf02146101c357806367927dc8146101f357806380ba59a51461020f57806388ccd3421461022b578063cd17ba571461025b576100a9565b8063012d066c146100ae578063054987a5146100de5780630811251a1461010e578063186316ca1461012c5780632e5f44511461015c575b600080fd5b6100c860048036038101906100c39190613501565b61028b565b6040516100d591906137a5565b60405180910390f35b6100f860048036038101906100f391906137c7565b610db2565b604051610105919061385a565b60405180910390f35b610116610eae565b604051610123919061394f565b60405180910390f35b61014660048036038101906101419190613971565b611263565b60405161015391906137a5565b60405180910390f35b610176600480360381019061017191906137c7565b611980565b60405161018a989796959493929190613a0b565b60405180910390f35b6101ad60048036038101906101a89190613ab3565b611d0e565b6040516101ba9190613b46565b60405180910390f35b6101dd60048036038101906101d891906137c7565b611deb565b6040516101ea91906137a5565b60405180910390f35b61020d60048036038101906102089190613cdd565b6123ea565b005b61022960048036038101906102249190613e07565b612581565b005b610245600480360381019061024091906137c7565b612788565b604051610252919061394f565b60405180910390f35b61027560048036038101906102709190613e50565b612b78565b60405161028291906137a5565b60405180910390f35b60606000829050600060035467ffffffffffffffff8111156102b0576102af6132d3565b5b6040519080825280602002602001820160405280156102e957816020015b6102d66131c1565b8152602001906001900390816102ce5790505b5090506000808351141561078f5760005b86518110156107895760005b6003548110156107755787828151811061032357610322613eac565b5b602002602001015160006002838154811061034157610340613eac565b5b906000526020600020016040516103589190613fdb565b90815260200160405180910390206006015414156107625760006002828154811061038657610385613eac565b5b9060005260206000200160405161039d9190613fdb565b9081526020016040518091039020604051806101000160405290816000820180546103c790613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546103f390613f0a565b80156104405780601f1061041557610100808354040283529160200191610440565b820191906000526020600020905b81548152906001019060200180831161042357829003601f168201915b5050505050815260200160018201805461045990613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461048590613f0a565b80156104d25780601f106104a7576101008083540402835291602001916104d2565b820191906000526020600020905b8154815290600101906020018083116104b557829003601f168201915b505050505081526020016002820180546104eb90613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461051790613f0a565b80156105645780601f1061053957610100808354040283529160200191610564565b820191906000526020600020905b81548152906001019060200180831161054757829003601f168201915b5050505050815260200160038201805461057d90613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546105a990613f0a565b80156105f65780601f106105cb576101008083540402835291602001916105f6565b820191906000526020600020905b8154815290600101906020018083116105d957829003601f168201915b5050505050815260200160048201805461060f90613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461063b90613f0a565b80156106885780601f1061065d57610100808354040283529160200191610688565b820191906000526020600020905b81548152906001019060200180831161066b57829003601f168201915b505050505081526020016005820180546106a190613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd90613f0a565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b505050505081526020016006820154815260200160078201548152505084848061074390614021565b95508151811061075657610755613eac565b5b60200260200101819052505b808061076d90614021565b915050610306565b50808061078190614021565b9150506102fa565b50610cfb565b60005b8651811015610cf95760005b600354811015610ce5578782815181106107bb576107ba613eac565b5b60200260200101516000600283815481106107d9576107d8613eac565b5b906000526020600020016040516107f09190613fdb565b9081526020016040518091039020600601541480156108db57506108da60006002838154811061082357610822613eac565b5b9060005260206000200160405161083a9190613fdb565b9081526020016040518091039020600301805461085690613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461088290613f0a565b80156108cf5780601f106108a4576101008083540402835291602001916108cf565b820191906000526020600020905b8154815290600101906020018083116108b257829003601f168201915b505050505088611d0e565b5b15610cd2576000600282815481106108f6576108f5613eac565b5b9060005260206000200160405161090d9190613fdb565b90815260200160405180910390206040518061010001604052908160008201805461093790613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461096390613f0a565b80156109b05780601f10610985576101008083540402835291602001916109b0565b820191906000526020600020905b81548152906001019060200180831161099357829003601f168201915b505050505081526020016001820180546109c990613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546109f590613f0a565b8015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b50505050508152602001600282018054610a5b90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8790613f0a565b8015610ad45780601f10610aa957610100808354040283529160200191610ad4565b820191906000526020600020905b815481529060010190602001808311610ab757829003601f168201915b50505050508152602001600382018054610aed90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1990613f0a565b8015610b665780601f10610b3b57610100808354040283529160200191610b66565b820191906000526020600020905b815481529060010190602001808311610b4957829003601f168201915b50505050508152602001600482018054610b7f90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bab90613f0a565b8015610bf85780601f10610bcd57610100808354040283529160200191610bf8565b820191906000526020600020905b815481529060010190602001808311610bdb57829003601f168201915b50505050508152602001600582018054610c1190613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3d90613f0a565b8015610c8a5780601f10610c5f57610100808354040283529160200191610c8a565b820191906000526020600020905b815481529060010190602001808311610c6d57829003601f168201915b5050505050815260200160068201548152602001600782015481525050848480610cb390614021565b955081518110610cc657610cc5613eac565b5b60200260200101819052505b8080610cdd90614021565b91505061079e565b508080610cf190614021565b915050610792565b505b8067ffffffffffffffff811115610d1557610d146132d3565b5b604051908082528060200260200182016040528015610d4e57816020015b610d3b6131c1565b815260200190600190039081610d335790505b50935060005b81811015610da857828181518110610d6f57610d6e613eac565b5b6020026020010151858281518110610d8a57610d89613eac565b5b60200260200101819052508080610da090614021565b915050610d54565b5050505092915050565b6060600182604051610dc4919061409b565b908152602001604051809103902060009054906101000a900460ff1615610e9657600082604051610df5919061409b565b90815260200160405180910390206002018054610e1190613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3d90613f0a565b8015610e8a5780601f10610e5f57610100808354040283529160200191610e8a565b820191906000526020600020905b815481529060010190602001808311610e6d57829003601f168201915b50505050509050610ea9565b6040518060200160405280600081525090505b919050565b610eb66131c1565b6000604051610ec4906140fe565b908152602001604051809103902060405180610100016040529081600082018054610eee90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1a90613f0a565b8015610f675780601f10610f3c57610100808354040283529160200191610f67565b820191906000526020600020905b815481529060010190602001808311610f4a57829003601f168201915b50505050508152602001600182018054610f8090613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610fac90613f0a565b8015610ff95780601f10610fce57610100808354040283529160200191610ff9565b820191906000526020600020905b815481529060010190602001808311610fdc57829003601f168201915b5050505050815260200160028201805461101290613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461103e90613f0a565b801561108b5780601f106110605761010080835404028352916020019161108b565b820191906000526020600020905b81548152906001019060200180831161106e57829003601f168201915b505050505081526020016003820180546110a490613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546110d090613f0a565b801561111d5780601f106110f25761010080835404028352916020019161111d565b820191906000526020600020905b81548152906001019060200180831161110057829003601f168201915b5050505050815260200160048201805461113690613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461116290613f0a565b80156111af5780601f10611184576101008083540402835291602001916111af565b820191906000526020600020905b81548152906001019060200180831161119257829003601f168201915b505050505081526020016005820180546111c890613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546111f490613f0a565b80156112415780601f1061121657610100808354040283529160200191611241565b820191906000526020600020905b81548152906001019060200180831161122457829003601f168201915b5050505050815260200160068201548152602001600782015481525050905090565b6060600060035467ffffffffffffffff811115611283576112826132d3565b5b6040519080825280602002602001820160405280156112bc57816020015b6112a96131c1565b8152602001906001900390816112a15790505b5090506000805b6003548110156118c85761139d6000600283815481106112e6576112e5613eac565b5b906000526020600020016040516112fd9190613fdb565b9081526020016040518091039020600301805461131990613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461134590613f0a565b80156113925780601f1061136757610100808354040283529160200191611392565b820191906000526020600020905b81548152906001019060200180831161137557829003601f168201915b505050505088611d0e565b801561147557506114746000600283815481106113bd576113bc613eac565b5b906000526020600020016040516113d49190613fdb565b908152602001604051809103902060020180546113f090613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461141c90613f0a565b80156114695780601f1061143e57610100808354040283529160200191611469565b820191906000526020600020905b81548152906001019060200180831161144c57829003601f168201915b505050505087611d0e565b5b80156114be57508460006002838154811061149357611492613eac565b5b906000526020600020016040516114aa9190613fdb565b908152602001604051809103902060060154145b156118b5576000600282815481106114d9576114d8613eac565b5b906000526020600020016040516114f09190613fdb565b90815260200160405180910390206040518061010001604052908160008201805461151a90613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461154690613f0a565b80156115935780601f1061156857610100808354040283529160200191611593565b820191906000526020600020905b81548152906001019060200180831161157657829003601f168201915b505050505081526020016001820180546115ac90613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546115d890613f0a565b80156116255780601f106115fa57610100808354040283529160200191611625565b820191906000526020600020905b81548152906001019060200180831161160857829003601f168201915b5050505050815260200160028201805461163e90613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461166a90613f0a565b80156116b75780601f1061168c576101008083540402835291602001916116b7565b820191906000526020600020905b81548152906001019060200180831161169a57829003601f168201915b505050505081526020016003820180546116d090613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546116fc90613f0a565b80156117495780601f1061171e57610100808354040283529160200191611749565b820191906000526020600020905b81548152906001019060200180831161172c57829003601f168201915b5050505050815260200160048201805461176290613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461178e90613f0a565b80156117db5780601f106117b0576101008083540402835291602001916117db565b820191906000526020600020905b8154815290600101906020018083116117be57829003601f168201915b505050505081526020016005820180546117f490613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461182090613f0a565b801561186d5780601f106118425761010080835404028352916020019161186d565b820191906000526020600020905b81548152906001019060200180831161185057829003601f168201915b505050505081526020016006820154815260200160078201548152505083838061189690614021565b9450815181106118a9576118a8613eac565b5b60200260200101819052505b80806118c090614021565b9150506112c3565b508067ffffffffffffffff8111156118e3576118e26132d3565b5b60405190808252806020026020018201604052801561191c57816020015b6119096131c1565b8152602001906001900390816119015790505b50925060005b818110156119765782818151811061193d5761193c613eac565b5b602002602001015184828151811061195857611957613eac565b5b6020026020010181905250808061196e90614021565b915050611922565b5050509392505050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546119b990613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546119e590613f0a565b8015611a325780601f10611a0757610100808354040283529160200191611a32565b820191906000526020600020905b815481529060010190602001808311611a1557829003601f168201915b505050505090806001018054611a4790613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7390613f0a565b8015611ac05780601f10611a9557610100808354040283529160200191611ac0565b820191906000526020600020905b815481529060010190602001808311611aa357829003601f168201915b505050505090806002018054611ad590613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054611b0190613f0a565b8015611b4e5780601f10611b2357610100808354040283529160200191611b4e565b820191906000526020600020905b815481529060010190602001808311611b3157829003601f168201915b505050505090806003018054611b6390613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8f90613f0a565b8015611bdc5780601f10611bb157610100808354040283529160200191611bdc565b820191906000526020600020905b815481529060010190602001808311611bbf57829003601f168201915b505050505090806004018054611bf190613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1d90613f0a565b8015611c6a5780601f10611c3f57610100808354040283529160200191611c6a565b820191906000526020600020905b815481529060010190602001808311611c4d57829003601f168201915b505050505090806005018054611c7f90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054611cab90613f0a565b8015611cf85780601f10611ccd57610100808354040283529160200191611cf8565b820191906000526020600020905b815481529060010190602001808311611cdb57829003601f168201915b5050505050908060060154908060070154905088565b60008083905060008390508051825114611d2d57600092505050611de5565b60005b8251811015611ddd57818181518110611d4c57611d4b613eac565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838281518110611d8c57611d8b613eac565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611dca5760009350505050611de5565b8080611dd590614021565b915050611d30565b506001925050505b92915050565b60606000603267ffffffffffffffff811115611e0a57611e096132d3565b5b604051908082528060200260200182016040528015611e4357816020015b611e306131c1565b815260200190600190039081611e285790505b5090506000805b60035481101561232e57611f24600060028381548110611e6d57611e6c613eac565b5b90600052602060002001604051611e849190613fdb565b90815260200160405180910390206002018054611ea090613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054611ecc90613f0a565b8015611f195780601f10611eee57610100808354040283529160200191611f19565b820191906000526020600020905b815481529060010190602001808311611efc57829003601f168201915b505050505086611d0e565b1561231b57600060028281548110611f3f57611f3e613eac565b5b90600052602060002001604051611f569190613fdb565b908152602001604051809103902060405180610100016040529081600082018054611f8090613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054611fac90613f0a565b8015611ff95780601f10611fce57610100808354040283529160200191611ff9565b820191906000526020600020905b815481529060010190602001808311611fdc57829003601f168201915b5050505050815260200160018201805461201290613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461203e90613f0a565b801561208b5780601f106120605761010080835404028352916020019161208b565b820191906000526020600020905b81548152906001019060200180831161206e57829003601f168201915b505050505081526020016002820180546120a490613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546120d090613f0a565b801561211d5780601f106120f25761010080835404028352916020019161211d565b820191906000526020600020905b81548152906001019060200180831161210057829003601f168201915b5050505050815260200160038201805461213690613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461216290613f0a565b80156121af5780601f10612184576101008083540402835291602001916121af565b820191906000526020600020905b81548152906001019060200180831161219257829003601f168201915b505050505081526020016004820180546121c890613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546121f490613f0a565b80156122415780601f1061221657610100808354040283529160200191612241565b820191906000526020600020905b81548152906001019060200180831161222457829003601f168201915b5050505050815260200160058201805461225a90613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461228690613f0a565b80156122d35780601f106122a8576101008083540402835291602001916122d3565b820191906000526020600020905b8154815290600101906020018083116122b657829003601f168201915b50505050508152602001600682015481526020016007820154815250508383806122fc90614021565b94508151811061230f5761230e613eac565b5b60200260200101819052505b808061232690614021565b915050611e4a565b5060008167ffffffffffffffff81111561234b5761234a6132d3565b5b60405190808252806020026020018201604052801561238457816020015b6123716131c1565b8152602001906001900390816123695790505b50905060005b828110156123de578381815181106123a5576123a4613eac565b5b60200260200101518282815181106123c0576123bf613eac565b5b602002602001018190525080806123d690614021565b91505061238a565b50809350505050919050565b600181600001516040516123fe919061409b565b908152602001604051809103902060009054906101000a900460ff1615612544578060008260000151604051612434919061409b565b9081526020016040518091039020600082015181600001908051906020019061245e929190613206565b50602082015181600101908051906020019061247b929190613206565b506040820151816002019080519060200190612498929190613206565b5060608201518160030190805190602001906124b5929190613206565b5060808201518160040190805190602001906124d2929190613206565b5060a08201518160050190805190602001906124ef929190613206565b5060c0820151816006015560e082015181600701559050507f1f0b7755550dd48676926d868a91257934b9a64d5f852cad45e85274c052c6b060c86040516125379190614158565b60405180910390a161257e565b7f1f0b7755550dd48676926d868a91257934b9a64d5f852cad45e85274c052c6b061271160405161257591906141ae565b60405180910390a15b50565b606060005b8251811015612783578281815181106125a2576125a1613eac565b5b60200260200101516000015191506001826040516125c0919061409b565b908152602001604051809103902060009054906101000a900460ff1661276a578281815181106125f3576125f2613eac565b5b602002602001015160008360405161260b919061409b565b90815260200160405180910390206000820151816000019080519060200190612635929190613206565b506020820151816001019080519060200190612652929190613206565b50604082015181600201908051906020019061266f929190613206565b50606082015181600301908051906020019061268c929190613206565b5060808201518160040190805190602001906126a9929190613206565b5060a08201518160050190805190602001906126c6929190613206565b5060c0820151816006015560e08201518160070155905050600180836040516126ef919061409b565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060028290806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061274f929190613206565b50600160035461275f91906141c9565b60038190555061276f565b612770565b5b808061277b90614021565b915050612586565b505050565b6127906131c1565b6001826040516127a0919061409b565b908152602001604051809103902060009054906101000a900460ff1615612b72576000826040516127d1919061409b565b9081526020016040518091039020604051806101000160405290816000820180546127fb90613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461282790613f0a565b80156128745780601f1061284957610100808354040283529160200191612874565b820191906000526020600020905b81548152906001019060200180831161285757829003601f168201915b5050505050815260200160018201805461288d90613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546128b990613f0a565b80156129065780601f106128db57610100808354040283529160200191612906565b820191906000526020600020905b8154815290600101906020018083116128e957829003601f168201915b5050505050815260200160028201805461291f90613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461294b90613f0a565b80156129985780601f1061296d57610100808354040283529160200191612998565b820191906000526020600020905b81548152906001019060200180831161297b57829003601f168201915b505050505081526020016003820180546129b190613f0a565b80601f01602080910402602001604051908101604052809291908181526020018280546129dd90613f0a565b8015612a2a5780601f106129ff57610100808354040283529160200191612a2a565b820191906000526020600020905b815481529060010190602001808311612a0d57829003601f168201915b50505050508152602001600482018054612a4390613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612a6f90613f0a565b8015612abc5780601f10612a9157610100808354040283529160200191612abc565b820191906000526020600020905b815481529060010190602001808311612a9f57829003601f168201915b50505050508152602001600582018054612ad590613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612b0190613f0a565b8015612b4e5780601f10612b2357610100808354040283529160200191612b4e565b820191906000526020600020905b815481529060010190602001808311612b3157829003601f168201915b50505050508152602001600682015481526020016007820154815250509050612b73565b5b919050565b60606000603267ffffffffffffffff811115612b9757612b966132d3565b5b604051908082528060200260200182016040528015612bd057816020015b612bbd6131c1565b815260200190600190039081612bb55790505b5090506000805b60035481101561310457612cb1600060028381548110612bfa57612bf9613eac565b5b90600052602060002001604051612c119190613fdb565b90815260200160405180910390206002018054612c2d90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612c5990613f0a565b8015612ca65780601f10612c7b57610100808354040283529160200191612ca6565b820191906000526020600020905b815481529060010190602001808311612c8957829003601f168201915b505050505087611d0e565b8015612cfa575084600060028381548110612ccf57612cce613eac565b5b90600052602060002001604051612ce69190613fdb565b908152602001604051809103902060060154145b156130f157600060028281548110612d1557612d14613eac565b5b90600052602060002001604051612d2c9190613fdb565b908152602001604051809103902060405180610100016040529081600082018054612d5690613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612d8290613f0a565b8015612dcf5780601f10612da457610100808354040283529160200191612dcf565b820191906000526020600020905b815481529060010190602001808311612db257829003601f168201915b50505050508152602001600182018054612de890613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612e1490613f0a565b8015612e615780601f10612e3657610100808354040283529160200191612e61565b820191906000526020600020905b815481529060010190602001808311612e4457829003601f168201915b50505050508152602001600282018054612e7a90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612ea690613f0a565b8015612ef35780601f10612ec857610100808354040283529160200191612ef3565b820191906000526020600020905b815481529060010190602001808311612ed657829003601f168201915b50505050508152602001600382018054612f0c90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612f3890613f0a565b8015612f855780601f10612f5a57610100808354040283529160200191612f85565b820191906000526020600020905b815481529060010190602001808311612f6857829003601f168201915b50505050508152602001600482018054612f9e90613f0a565b80601f0160208091040260200160405190810160405280929190818152602001828054612fca90613f0a565b80156130175780601f10612fec57610100808354040283529160200191613017565b820191906000526020600020905b815481529060010190602001808311612ffa57829003601f168201915b5050505050815260200160058201805461303090613f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461305c90613f0a565b80156130a95780601f1061307e576101008083540402835291602001916130a9565b820191906000526020600020905b81548152906001019060200180831161308c57829003601f168201915b50505050508152602001600682015481526020016007820154815250508383806130d290614021565b9450815181106130e5576130e4613eac565b5b60200260200101819052505b80806130fc90614021565b915050612bd7565b5060008167ffffffffffffffff811115613121576131206132d3565b5b60405190808252806020026020018201604052801561315a57816020015b6131476131c1565b81526020019060019003908161313f5790505b50905060005b828110156131b45783818151811061317b5761317a613eac565b5b602002602001015182828151811061319657613195613eac565b5b602002602001018190525080806131ac90614021565b915050613160565b5080935050505092915050565b60405180610100016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160008152602001600081525090565b82805461321290613f0a565b90600052602060002090601f016020900481019282613234576000855561327b565b82601f1061324d57805160ff191683800117855561327b565b8280016001018555821561327b579182015b8281111561327a57825182559160200191906001019061325f565b5b509050613288919061328c565b5090565b5b808211156132a557600081600090555060010161328d565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61330b826132c2565b810181811067ffffffffffffffff8211171561332a576133296132d3565b5b80604052505050565b600061333d6132a9565b90506133498282613302565b919050565b600067ffffffffffffffff821115613369576133686132d3565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6133928161337f565b811461339d57600080fd5b50565b6000813590506133af81613389565b92915050565b60006133c86133c38461334e565b613333565b905080838252602082019050602084028301858111156133eb576133ea61337a565b5b835b81811015613414578061340088826133a0565b8452602084019350506020810190506133ed565b5050509392505050565b600082601f830112613433576134326132bd565b5b81356134438482602086016133b5565b91505092915050565b600080fd5b600067ffffffffffffffff82111561346c5761346b6132d3565b5b613475826132c2565b9050602081019050919050565b82818337600083830152505050565b60006134a461349f84613451565b613333565b9050828152602081018484840111156134c0576134bf61344c565b5b6134cb848285613482565b509392505050565b600082601f8301126134e8576134e76132bd565b5b81356134f8848260208601613491565b91505092915050565b60008060408385031215613518576135176132b3565b5b600083013567ffffffffffffffff811115613536576135356132b8565b5b6135428582860161341e565b925050602083013567ffffffffffffffff811115613563576135626132b8565b5b61356f858286016134d3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156135df5780820151818401526020810190506135c4565b838111156135ee576000848401525b50505050565b60006135ff826135a5565b61360981856135b0565b93506136198185602086016135c1565b613622816132c2565b840191505092915050565b6136368161337f565b82525050565b600061010083016000830151848203600086015261365a82826135f4565b9150506020830151848203602086015261367482826135f4565b9150506040830151848203604086015261368e82826135f4565b915050606083015184820360608601526136a882826135f4565b915050608083015184820360808601526136c282826135f4565b91505060a083015184820360a08601526136dc82826135f4565b91505060c08301516136f160c086018261362d565b5060e083015161370460e086018261362d565b508091505092915050565b600061371b838361363c565b905092915050565b6000602082019050919050565b600061373b82613579565b6137458185613584565b93508360208202850161375785613595565b8060005b858110156137935784840389528151613774858261370f565b945061377f83613723565b925060208a0199505060018101905061375b565b50829750879550505050505092915050565b600060208201905081810360008301526137bf8184613730565b905092915050565b6000602082840312156137dd576137dc6132b3565b5b600082013567ffffffffffffffff8111156137fb576137fa6132b8565b5b613807848285016134d3565b91505092915050565b600082825260208201905092915050565b600061382c826135a5565b6138368185613810565b93506138468185602086016135c1565b61384f816132c2565b840191505092915050565b600060208201905081810360008301526138748184613821565b905092915050565b600061010083016000830151848203600086015261389a82826135f4565b915050602083015184820360208601526138b482826135f4565b915050604083015184820360408601526138ce82826135f4565b915050606083015184820360608601526138e882826135f4565b9150506080830151848203608086015261390282826135f4565b91505060a083015184820360a086015261391c82826135f4565b91505060c083015161393160c086018261362d565b5060e083015161394460e086018261362d565b508091505092915050565b60006020820190508181036000830152613969818461387c565b905092915050565b60008060006060848603121561398a576139896132b3565b5b600084013567ffffffffffffffff8111156139a8576139a76132b8565b5b6139b4868287016134d3565b935050602084013567ffffffffffffffff8111156139d5576139d46132b8565b5b6139e1868287016134d3565b92505060406139f2868287016133a0565b9150509250925092565b613a058161337f565b82525050565b6000610100820190508181036000830152613a26818b613821565b90508181036020830152613a3a818a613821565b90508181036040830152613a4e8189613821565b90508181036060830152613a628188613821565b90508181036080830152613a768187613821565b905081810360a0830152613a8a8186613821565b9050613a9960c08301856139fc565b613aa660e08301846139fc565b9998505050505050505050565b60008060408385031215613aca57613ac96132b3565b5b600083013567ffffffffffffffff811115613ae857613ae76132b8565b5b613af4858286016134d3565b925050602083013567ffffffffffffffff811115613b1557613b146132b8565b5b613b21858286016134d3565b9150509250929050565b60008115159050919050565b613b4081613b2b565b82525050565b6000602082019050613b5b6000830184613b37565b92915050565b600080fd5b600080fd5b60006101008284031215613b8257613b81613b61565b5b613b8d610100613333565b9050600082013567ffffffffffffffff811115613bad57613bac613b66565b5b613bb9848285016134d3565b600083015250602082013567ffffffffffffffff811115613bdd57613bdc613b66565b5b613be9848285016134d3565b602083015250604082013567ffffffffffffffff811115613c0d57613c0c613b66565b5b613c19848285016134d3565b604083015250606082013567ffffffffffffffff811115613c3d57613c3c613b66565b5b613c49848285016134d3565b606083015250608082013567ffffffffffffffff811115613c6d57613c6c613b66565b5b613c79848285016134d3565b60808301525060a082013567ffffffffffffffff811115613c9d57613c9c613b66565b5b613ca9848285016134d3565b60a08301525060c0613cbd848285016133a0565b60c08301525060e0613cd1848285016133a0565b60e08301525092915050565b600060208284031215613cf357613cf26132b3565b5b600082013567ffffffffffffffff811115613d1157613d106132b8565b5b613d1d84828501613b6b565b91505092915050565b600067ffffffffffffffff821115613d4157613d406132d3565b5b602082029050602081019050919050565b6000613d65613d6084613d26565b613333565b90508083825260208201905060208402830185811115613d8857613d8761337a565b5b835b81811015613dcf57803567ffffffffffffffff811115613dad57613dac6132bd565b5b808601613dba8982613b6b565b85526020850194505050602081019050613d8a565b5050509392505050565b600082601f830112613dee57613ded6132bd565b5b8135613dfe848260208601613d52565b91505092915050565b600060208284031215613e1d57613e1c6132b3565b5b600082013567ffffffffffffffff811115613e3b57613e3a6132b8565b5b613e4784828501613dd9565b91505092915050565b60008060408385031215613e6757613e666132b3565b5b600083013567ffffffffffffffff811115613e8557613e846132b8565b5b613e91858286016134d3565b9250506020613ea2858286016133a0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613f2257607f821691505b60208210811415613f3657613f35613edb565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154613f6981613f0a565b613f738186613f3c565b94506001821660008114613f8e5760018114613f9f57613fd2565b60ff19831686528186019350613fd2565b613fa885613f47565b60005b83811015613fca57815481890152600182019150602081019050613fab565b838801955050505b50505092915050565b6000613fe78284613f5c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061402c8261337f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561405f5761405e613ff2565b5b600182019050919050565b6000614075826135a5565b61407f8185613f3c565b935061408f8185602086016135c1565b80840191505092915050565b60006140a7828461406a565b915081905092915050565b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b60006140e8600183613f3c565b91506140f3826140b2565b600182019050919050565b6000614109826140db565b9150819050919050565b6000819050919050565b6000819050919050565b600061414261413d61413884614113565b61411d565b61337f565b9050919050565b61415281614127565b82525050565b600060208201905061416d6000830184614149565b92915050565b6000819050919050565b600061419861419361418e84614173565b61411d565b61337f565b9050919050565b6141a88161417d565b82525050565b60006020820190506141c3600083018461419f565b92915050565b60006141d48261337f565b91506141df8361337f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561421457614213613ff2565b5b82820190509291505056fea264697066735822122032319f712c32554ab3bdf2be97c4f2a3e45fb60db666ec7d83854320f956cbc264736f6c634300080a0033";

    public static final String FUNC_ASSETDETAILS = "assetDetails";

    public static final String FUNC_GETASSETDETAIL = "getAssetDetail";

    public static final String FUNC_GETASSETIDBYASSETDETAILID = "getAssetIdByAssetDetailId";

    public static final String FUNC_GETBYPRIMARYKEY = "getByPrimaryKey";

    public static final String FUNC_GETLIST = "getList";

    public static final String FUNC_GETLISTBYSTATUS = "getListByStatus";

    public static final String FUNC_GETLISTBYSTATUSANDPLACEID = "getListByStatusAndPlaceId";

    public static final String FUNC_GETSTATUSLISTBYPLACEID = "getStatusListByPlaceId";

    public static final String FUNC_INSERTASSETDETAIL = "insertAssetDetail";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_UPDATE = "update";

    public static final Event ISUPDATESUCCESS_EVENT = new Event("isUpdateSuccess",
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected AssetDetailContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected AssetDetailContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected AssetDetailContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected AssetDetailContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<IsUpdateSuccessEventResponse> getIsUpdateSuccessEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ISUPDATESUCCESS_EVENT, transactionReceipt);
        ArrayList<IsUpdateSuccessEventResponse> responses = new ArrayList<IsUpdateSuccessEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            IsUpdateSuccessEventResponse typedResponse = new IsUpdateSuccessEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<IsUpdateSuccessEventResponse> isUpdateSuccessEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, IsUpdateSuccessEventResponse>() {
            @Override
            public IsUpdateSuccessEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ISUPDATESUCCESS_EVENT, log);
                IsUpdateSuccessEventResponse typedResponse = new IsUpdateSuccessEventResponse();
                typedResponse.log = log;
                typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<IsUpdateSuccessEventResponse> isUpdateSuccessEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ISUPDATESUCCESS_EVENT));
        return isUpdateSuccessEventFlowable(filter);
    }

    public RemoteFunctionCall<Tuple8<String, String, String, String, String, String, BigInteger, BigInteger>> assetDetails(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ASSETDETAILS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple8<String, String, String, String, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple8<String, String, String, String, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<String, String, String, String, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<String, String, String, String, String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue(),
                                (String) results.get(5).getValue(),
                                (BigInteger) results.get(6).getValue(),
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<AssetDetail> getAssetDetail() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETASSETDETAIL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<AssetDetail>() {}));
        return executeRemoteCallSingleValueReturn(function, AssetDetail.class);
    }

    public RemoteFunctionCall<String> getAssetIdByAssetDetailId(String _assetDetailId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETASSETIDBYASSETDETAILID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_assetDetailId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<AssetDetail> getByPrimaryKey(String _assetDetialId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBYPRIMARYKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_assetDetialId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<AssetDetail>() {}));
        return executeRemoteCallSingleValueReturn(function, AssetDetail.class);
    }

    public RemoteFunctionCall<List> getList(String _assetId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLIST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_assetId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<AssetDetail>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getListByStatus(String _assetId, BigInteger _currentStatus) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTBYSTATUS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_assetId),
                        new org.web3j.abi.datatypes.generated.Uint256(_currentStatus)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<AssetDetail>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getListByStatusAndPlaceId(List<BigInteger> _currentStatus, String _placeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTBYSTATUSANDPLACEID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                                org.web3j.abi.datatypes.generated.Uint256.class,
                                org.web3j.abi.Utils.typeMap(_currentStatus, org.web3j.abi.datatypes.generated.Uint256.class)),
                        new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<AssetDetail>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getStatusListByPlaceId(String _placeId, String _assetId, BigInteger _currentStatus) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETSTATUSLISTBYPLACEID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId),
                        new org.web3j.abi.datatypes.Utf8String(_assetId),
                        new org.web3j.abi.datatypes.generated.Uint256(_currentStatus)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<AssetDetail>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> insertAssetDetail(List<AssetDetail> _assetDetailList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INSERTASSETDETAIL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<AssetDetail>(AssetDetail.class, _assetDetailList)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> update(AssetDetail _assetDetail) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATE,
                Arrays.<Type>asList(_assetDetail),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static AssetDetailContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new AssetDetailContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static AssetDetailContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new AssetDetailContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static AssetDetailContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new AssetDetailContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static AssetDetailContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new AssetDetailContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(AssetDetailContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(AssetDetailContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(AssetDetailContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(AssetDetailContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Getter
    @Setter
    @ToString
    public static class AssetDetail extends DynamicStruct {
        public String assetDetailId;

        public String currentUserAccount;

        public String assetId;

        public String placeId;

        public String beginTime;

        public String endTime;

        public BigInteger currentStatus;

        public BigInteger status;

        public AssetDetail(String assetDetailId, String currentUserAccount, String assetId, String placeId, String beginTime, String endTime, BigInteger currentStatus, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(assetDetailId),new org.web3j.abi.datatypes.Utf8String(currentUserAccount),new org.web3j.abi.datatypes.Utf8String(assetId),new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(beginTime),new org.web3j.abi.datatypes.Utf8String(endTime),new org.web3j.abi.datatypes.generated.Uint256(currentStatus),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.assetDetailId = assetDetailId;
            this.currentUserAccount = currentUserAccount;
            this.assetId = assetId;
            this.placeId = placeId;
            this.beginTime = beginTime;
            this.endTime = endTime;
            this.currentStatus = currentStatus;
            this.status = status;
        }

        public AssetDetail(Utf8String assetDetailId, Utf8String currentUserAccount, Utf8String assetId, Utf8String placeId, Utf8String beginTime, Utf8String endTime, Uint256 currentStatus, Uint256 status) {
            super(assetDetailId,currentUserAccount,assetId,placeId,beginTime,endTime,currentStatus,status);
            this.assetDetailId = assetDetailId.getValue();
            this.currentUserAccount = currentUserAccount.getValue();
            this.assetId = assetId.getValue();
            this.placeId = placeId.getValue();
            this.beginTime = beginTime.getValue();
            this.endTime = endTime.getValue();
            this.currentStatus = currentStatus.getValue();
            this.status = status.getValue();
        }
    }

    @Getter
    public static class IsUpdateSuccessEventResponse extends BaseEventResponse {
        public BigInteger code;
    }
}